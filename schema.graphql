# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

"An object with an ID"
interface Node {
  "The id of the object."
  id: ID!
}

type AggregateAsset {
  count: Int!
}

type AggregateAssetTransformations {
  count: Int!
}

type AggregateCampus {
  count: Int!
}

type AggregateInstitution {
  count: Int!
}

type AggregateInstitutionChatbotSettings {
  count: Int!
}

type AggregateInstitutionSLSSettings {
  count: Int!
}

type AggregateInstitutionTFPSettings {
  count: Int!
}

type AggregateOrganisation {
  count: Int!
}

type AggregateOrganisationTFPSettings {
  count: Int!
}

type AggregateSlsRelease {
  count: Int!
}

type AggregateStudentSolution {
  count: Int!
}

type AggregateStudentSolutionCategory {
  count: Int!
}

type AggregateTfpSettings {
  count: Int!
}

type AggregateTheme {
  count: Int!
}

type Asset implements Node {
  additionalDocumentsStudentSolution(locale: Locale): [StudentSolution!]!
  alt: String
  classes: String
  createdAt: DateTime!
  defaultTransformations: AssetTransformations
  faviconOrganisationTFPSettings(after: String, before: String, first: Int, last: Int, orderBy: OrganisationTFPSettingsOrderByInput, skip: Int, where: OrganisationTFPSettingsWhereInput): [OrganisationTFPSettings!]
  faviconTfpSettings(after: String, before: String, first: Int, last: Int, orderBy: TfpSettingsOrderByInput, skip: Int, where: TfpSettingsWhereInput): [TfpSettings!]
  fileName: String!
  handle: String!
  height: Float
  id: ID!
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitution(locale: Locale): [Institution!]!
  logoOrganisation(locale: Locale): [Organisation!]!
  logoStudentSolution(locale: Locale): [StudentSolution!]!
  mimeType: String
  organisationOwner: Organisation
  serviceLogoOrganisationTFPSettings(locale: Locale): [OrganisationTFPSettings!]!
  serviceLogoTfpSettings(after: String, before: String, first: Int, last: Int, orderBy: TfpSettingsOrderByInput, skip: Int, where: TfpSettingsWhereInput): [TfpSettings!]
  size: Float
  status: Status!
  style: String
  title: String
  updatedAt: DateTime!
  "Get the url for the asset with provided transformations applied."
  url(transformation: AssetTransformationInput): String!
  width: Float
}

"A connection to a list of items."
type AssetConnection {
  aggregate: AggregateAsset!
  "A list of edges."
  edges: [AssetEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type AssetEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Asset!
}

type AssetPreviousValues {
  alt: String
  classes: String
  createdAt: DateTime!
  fileName: String!
  handle: String!
  height: Float
  id: ID!
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  mimeType: String
  size: Float
  status: Status!
  style: String
  title: String
  updatedAt: DateTime!
  width: Float
}

type AssetSubscriptionPayload {
  mutation: MutationType!
  node: Asset
  previousValues: AssetPreviousValues
  updatedFields: [String!]
}

type AssetTransformations implements Node {
  asset: Asset
  createdAt: DateTime!
  height: Int
  id: ID!
  status: Status!
  updatedAt: DateTime!
  width: Int
}

"A connection to a list of items."
type AssetTransformationsConnection {
  aggregate: AggregateAssetTransformations!
  "A list of edges."
  edges: [AssetTransformationsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type AssetTransformationsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: AssetTransformations!
}

type AssetTransformationsPreviousValues {
  createdAt: DateTime!
  height: Int
  id: ID!
  status: Status!
  updatedAt: DateTime!
  width: Int
}

type AssetTransformationsSubscriptionPayload {
  mutation: MutationType!
  node: AssetTransformations
  previousValues: AssetTransformationsPreviousValues
  updatedFields: [String!]
}

type BatchPayload {
  "The number of nodes that have been affected by the Batch operation."
  count: Long!
}

type Campus implements Node {
  contacts(locale: Locale): [Json!]!
  createdAt: DateTime!
  id: ID!
  institution: Institution
  label(locale: Locale): String
  name: String!
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type CampusConnection {
  aggregate: AggregateCampus!
  "A list of edges."
  edges: [CampusEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type CampusEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Campus!
}

type CampusPreviousValues {
  contactsEN: [Json!]!
  contactsFR: [Json!]!
  createdAt: DateTime!
  id: ID!
  labelEN: String
  labelFR: String
  name: String!
  status: Status!
  updatedAt: DateTime!
}

type CampusSubscriptionPayload {
  mutation: MutationType!
  node: Campus
  previousValues: CampusPreviousValues
  updatedFields: [String!]
}

type Institution implements Node {
  campuses(after: String, before: String, first: Int, last: Int, orderBy: CampusOrderByInput, skip: Int, where: CampusWhereInput): [Campus!]
  createdAt: DateTime!
  id: ID!
  institutionChatbotSettings: InstitutionChatbotSettings
  institutionSLSSettings: InstitutionSLSSettings
  institutionTFPSettings: InstitutionTFPSettings
  label(locale: Locale): String
  labelShort(locale: Locale): String
  logo(locale: Locale): Asset
  name: String!
  organisation: Organisation
  path: String!
  status: Status!
  studentSolutionCategories(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionCategoryOrderByInput, skip: Int, where: StudentSolutionCategoryWhereInput): [StudentSolutionCategory!]
  theme: Theme
  updatedAt: DateTime!
}

type InstitutionChatbotSettings implements Node {
  backFromCategoryText(locale: Locale): RichText
  backFromSolutionText(locale: Locale): RichText
  createdAt: DateTime!
  description(locale: Locale): RichText
  id: ID!
  institution: Institution
  label(locale: Locale): String
  selectCampusText(locale: Locale): RichText
  selectCategoryText(locale: Locale): RichText
  selectInstitutionText(locale: Locale): RichText
  selectStudentSolutionText(locale: Locale): RichText
  status: Status!
  studentSolutionsIntroductionText(locale: Locale): RichText
  updatedAt: DateTime!
}

"A connection to a list of items."
type InstitutionChatbotSettingsConnection {
  aggregate: AggregateInstitutionChatbotSettings!
  "A list of edges."
  edges: [InstitutionChatbotSettingsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type InstitutionChatbotSettingsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: InstitutionChatbotSettings!
}

type InstitutionChatbotSettingsPreviousValues {
  backFromCategoryTextEN: RichText
  backFromCategoryTextFR: RichText
  backFromSolutionTextEN: RichText
  backFromSolutionTextFR: RichText
  createdAt: DateTime!
  descriptionEN: RichText
  descriptionFR: RichText
  id: ID!
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichText
  selectCampusTextFR: RichText
  selectCategoryTextEN: RichText
  selectCategoryTextFR: RichText
  selectInstitutionTextEN: RichText
  selectInstitutionTextFR: RichText
  selectStudentSolutionTextEN: RichText
  selectStudentSolutionTextFR: RichText
  status: Status!
  studentSolutionsIntroductionTextEN: RichText
  studentSolutionsIntroductionTextFR: RichText
  updatedAt: DateTime!
}

type InstitutionChatbotSettingsSubscriptionPayload {
  mutation: MutationType!
  node: InstitutionChatbotSettings
  previousValues: InstitutionChatbotSettingsPreviousValues
  updatedFields: [String!]
}

"A connection to a list of items."
type InstitutionConnection {
  aggregate: AggregateInstitution!
  "A list of edges."
  edges: [InstitutionEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type InstitutionEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Institution!
}

type InstitutionPreviousValues {
  createdAt: DateTime!
  id: ID!
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  name: String!
  path: String!
  status: Status!
  updatedAt: DateTime!
}

type InstitutionSLSSettings implements Node {
  borrowingAssistanceDescription(locale: Locale): RichText
  borrowingAssistanceTitle(locale: Locale): String
  campusFieldLabel(locale: Locale): String
  createdAt: DateTime!
  id: ID!
  institution: Institution
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type InstitutionSLSSettingsConnection {
  aggregate: AggregateInstitutionSLSSettings!
  "A list of edges."
  edges: [InstitutionSLSSettingsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type InstitutionSLSSettingsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: InstitutionSLSSettings!
}

type InstitutionSLSSettingsPreviousValues {
  borrowingAssistanceDescriptionEN: RichText
  borrowingAssistanceDescriptionFR: RichText
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  createdAt: DateTime!
  id: ID!
  status: Status!
  updatedAt: DateTime!
}

type InstitutionSLSSettingsSubscriptionPayload {
  mutation: MutationType!
  node: InstitutionSLSSettings
  previousValues: InstitutionSLSSettingsPreviousValues
  updatedFields: [String!]
}

type InstitutionSubscriptionPayload {
  mutation: MutationType!
  node: Institution
  previousValues: InstitutionPreviousValues
  updatedFields: [String!]
}

type InstitutionTFPSettings implements Node {
  createdAt: DateTime!
  id: ID!
  institution: Institution
  landingWelcomeText(locale: Locale): RichText
  landingWelcomeTitle(locale: Locale): String
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type InstitutionTFPSettingsConnection {
  aggregate: AggregateInstitutionTFPSettings!
  "A list of edges."
  edges: [InstitutionTFPSettingsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type InstitutionTFPSettingsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: InstitutionTFPSettings!
}

type InstitutionTFPSettingsPreviousValues {
  createdAt: DateTime!
  id: ID!
  landingWelcomeTextEN: RichText
  landingWelcomeTextFR: RichText
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status!
  updatedAt: DateTime!
}

type InstitutionTFPSettingsSubscriptionPayload {
  mutation: MutationType!
  node: InstitutionTFPSettings
  previousValues: InstitutionTFPSettingsPreviousValues
  updatedFields: [String!]
}

type Mutation {
  createAsset(data: AssetCreateInput!): Asset!
  createAssetTransformations(data: AssetTransformationsCreateInput!): AssetTransformations!
  createCampus(data: CampusCreateInput!): Campus!
  createInstitution(data: InstitutionCreateInput!): Institution!
  createInstitutionChatbotSettings(data: InstitutionChatbotSettingsCreateInput!): InstitutionChatbotSettings!
  createInstitutionSLSSettings(data: InstitutionSLSSettingsCreateInput!): InstitutionSLSSettings!
  createInstitutionTFPSettings(data: InstitutionTFPSettingsCreateInput!): InstitutionTFPSettings!
  createOrganisation(data: OrganisationCreateInput!): Organisation!
  createOrganisationTFPSettings(data: OrganisationTFPSettingsCreateInput!): OrganisationTFPSettings!
  createSlsRelease(data: SlsReleaseCreateInput!): SlsRelease!
  createStudentSolution(data: StudentSolutionCreateInput!): StudentSolution!
  createStudentSolutionCategory(data: StudentSolutionCategoryCreateInput!): StudentSolutionCategory!
  createTfpSettings(data: TfpSettingsCreateInput!): TfpSettings!
  createTheme(data: ThemeCreateInput!): Theme!
  deleteAsset(where: AssetWhereUniqueInput!): Asset
  deleteAssetTransformations(where: AssetTransformationsWhereUniqueInput!): AssetTransformations
  deleteCampus(where: CampusWhereUniqueInput!): Campus
  deleteInstitution(where: InstitutionWhereUniqueInput!): Institution
  deleteInstitutionChatbotSettings(where: InstitutionChatbotSettingsWhereUniqueInput!): InstitutionChatbotSettings
  deleteInstitutionSLSSettings(where: InstitutionSLSSettingsWhereUniqueInput!): InstitutionSLSSettings
  deleteInstitutionTFPSettings(where: InstitutionTFPSettingsWhereUniqueInput!): InstitutionTFPSettings
  deleteManyAssetTransformationses(where: AssetTransformationsWhereInput): BatchPayload!
  deleteManyAssets(where: AssetWhereInput): BatchPayload!
  deleteManyCampuses(where: CampusWhereInput): BatchPayload!
  deleteManyInstitutionChatbotSettingses(where: InstitutionChatbotSettingsWhereInput): BatchPayload!
  deleteManyInstitutionSLSSettingses(where: InstitutionSLSSettingsWhereInput): BatchPayload!
  deleteManyInstitutionTFPSettingses(where: InstitutionTFPSettingsWhereInput): BatchPayload!
  deleteManyInstitutions(where: InstitutionWhereInput): BatchPayload!
  deleteManyOrganisationTFPSettingses(where: OrganisationTFPSettingsWhereInput): BatchPayload!
  deleteManyOrganisations(where: OrganisationWhereInput): BatchPayload!
  deleteManySlsReleases(where: SlsReleaseWhereInput): BatchPayload!
  deleteManyStudentSolutionCategories(where: StudentSolutionCategoryWhereInput): BatchPayload!
  deleteManyStudentSolutions(where: StudentSolutionWhereInput): BatchPayload!
  deleteManyTfpSettingses(where: TfpSettingsWhereInput): BatchPayload!
  deleteManyThemes(where: ThemeWhereInput): BatchPayload!
  deleteOrganisation(where: OrganisationWhereUniqueInput!): Organisation
  deleteOrganisationTFPSettings(where: OrganisationTFPSettingsWhereUniqueInput!): OrganisationTFPSettings
  deleteSlsRelease(where: SlsReleaseWhereUniqueInput!): SlsRelease
  deleteStudentSolution(where: StudentSolutionWhereUniqueInput!): StudentSolution
  deleteStudentSolutionCategory(where: StudentSolutionCategoryWhereUniqueInput!): StudentSolutionCategory
  deleteTfpSettings(where: TfpSettingsWhereUniqueInput!): TfpSettings
  deleteTheme(where: ThemeWhereUniqueInput!): Theme
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset
  updateAssetTransformations(data: AssetTransformationsUpdateInput!, where: AssetTransformationsWhereUniqueInput!): AssetTransformations
  updateCampus(data: CampusUpdateInput!, where: CampusWhereUniqueInput!): Campus
  updateInstitution(data: InstitutionUpdateInput!, where: InstitutionWhereUniqueInput!): Institution
  updateInstitutionChatbotSettings(data: InstitutionChatbotSettingsUpdateInput!, where: InstitutionChatbotSettingsWhereUniqueInput!): InstitutionChatbotSettings
  updateInstitutionSLSSettings(data: InstitutionSLSSettingsUpdateInput!, where: InstitutionSLSSettingsWhereUniqueInput!): InstitutionSLSSettings
  updateInstitutionTFPSettings(data: InstitutionTFPSettingsUpdateInput!, where: InstitutionTFPSettingsWhereUniqueInput!): InstitutionTFPSettings
  updateManyAssetTransformationses(data: AssetTransformationsUpdateManyMutationInput!, where: AssetTransformationsWhereInput): BatchPayload!
  updateManyAssets(data: AssetUpdateManyMutationInput!, where: AssetWhereInput): BatchPayload!
  updateManyCampuses(data: CampusUpdateManyMutationInput!, where: CampusWhereInput): BatchPayload!
  updateManyInstitutionChatbotSettingses(data: InstitutionChatbotSettingsUpdateManyMutationInput!, where: InstitutionChatbotSettingsWhereInput): BatchPayload!
  updateManyInstitutionSLSSettingses(data: InstitutionSLSSettingsUpdateManyMutationInput!, where: InstitutionSLSSettingsWhereInput): BatchPayload!
  updateManyInstitutionTFPSettingses(data: InstitutionTFPSettingsUpdateManyMutationInput!, where: InstitutionTFPSettingsWhereInput): BatchPayload!
  updateManyInstitutions(data: InstitutionUpdateManyMutationInput!, where: InstitutionWhereInput): BatchPayload!
  updateManyOrganisationTFPSettingses(data: OrganisationTFPSettingsUpdateManyMutationInput!, where: OrganisationTFPSettingsWhereInput): BatchPayload!
  updateManyOrganisations(data: OrganisationUpdateManyMutationInput!, where: OrganisationWhereInput): BatchPayload!
  updateManySlsReleases(data: SlsReleaseUpdateManyMutationInput!, where: SlsReleaseWhereInput): BatchPayload!
  updateManyStudentSolutionCategories(data: StudentSolutionCategoryUpdateManyMutationInput!, where: StudentSolutionCategoryWhereInput): BatchPayload!
  updateManyStudentSolutions(data: StudentSolutionUpdateManyMutationInput!, where: StudentSolutionWhereInput): BatchPayload!
  updateManyTfpSettingses(data: TfpSettingsUpdateManyMutationInput!, where: TfpSettingsWhereInput): BatchPayload!
  updateManyThemes(data: ThemeUpdateManyMutationInput!, where: ThemeWhereInput): BatchPayload!
  updateOrganisation(data: OrganisationUpdateInput!, where: OrganisationWhereUniqueInput!): Organisation
  updateOrganisationTFPSettings(data: OrganisationTFPSettingsUpdateInput!, where: OrganisationTFPSettingsWhereUniqueInput!): OrganisationTFPSettings
  updateSlsRelease(data: SlsReleaseUpdateInput!, where: SlsReleaseWhereUniqueInput!): SlsRelease
  updateStudentSolution(data: StudentSolutionUpdateInput!, where: StudentSolutionWhereUniqueInput!): StudentSolution
  updateStudentSolutionCategory(data: StudentSolutionCategoryUpdateInput!, where: StudentSolutionCategoryWhereUniqueInput!): StudentSolutionCategory
  updateTfpSettings(data: TfpSettingsUpdateInput!, where: TfpSettingsWhereUniqueInput!): TfpSettings
  updateTheme(data: ThemeUpdateInput!, where: ThemeWhereUniqueInput!): Theme
  upsertAsset(create: AssetCreateInput!, update: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset!
  upsertAssetTransformations(create: AssetTransformationsCreateInput!, update: AssetTransformationsUpdateInput!, where: AssetTransformationsWhereUniqueInput!): AssetTransformations!
  upsertCampus(create: CampusCreateInput!, update: CampusUpdateInput!, where: CampusWhereUniqueInput!): Campus!
  upsertInstitution(create: InstitutionCreateInput!, update: InstitutionUpdateInput!, where: InstitutionWhereUniqueInput!): Institution!
  upsertInstitutionChatbotSettings(create: InstitutionChatbotSettingsCreateInput!, update: InstitutionChatbotSettingsUpdateInput!, where: InstitutionChatbotSettingsWhereUniqueInput!): InstitutionChatbotSettings!
  upsertInstitutionSLSSettings(create: InstitutionSLSSettingsCreateInput!, update: InstitutionSLSSettingsUpdateInput!, where: InstitutionSLSSettingsWhereUniqueInput!): InstitutionSLSSettings!
  upsertInstitutionTFPSettings(create: InstitutionTFPSettingsCreateInput!, update: InstitutionTFPSettingsUpdateInput!, where: InstitutionTFPSettingsWhereUniqueInput!): InstitutionTFPSettings!
  upsertOrganisation(create: OrganisationCreateInput!, update: OrganisationUpdateInput!, where: OrganisationWhereUniqueInput!): Organisation!
  upsertOrganisationTFPSettings(create: OrganisationTFPSettingsCreateInput!, update: OrganisationTFPSettingsUpdateInput!, where: OrganisationTFPSettingsWhereUniqueInput!): OrganisationTFPSettings!
  upsertSlsRelease(create: SlsReleaseCreateInput!, update: SlsReleaseUpdateInput!, where: SlsReleaseWhereUniqueInput!): SlsRelease!
  upsertStudentSolution(create: StudentSolutionCreateInput!, update: StudentSolutionUpdateInput!, where: StudentSolutionWhereUniqueInput!): StudentSolution!
  upsertStudentSolutionCategory(create: StudentSolutionCategoryCreateInput!, update: StudentSolutionCategoryUpdateInput!, where: StudentSolutionCategoryWhereUniqueInput!): StudentSolutionCategory!
  upsertTfpSettings(create: TfpSettingsCreateInput!, update: TfpSettingsUpdateInput!, where: TfpSettingsWhereUniqueInput!): TfpSettings!
  upsertTheme(create: ThemeCreateInput!, update: ThemeUpdateInput!, where: ThemeWhereUniqueInput!): Theme!
}

type Organisation implements Node {
  createdAt: DateTime!
  id: ID!
  institutions(after: String, before: String, first: Int, last: Int, orderBy: InstitutionOrderByInput, skip: Int, where: InstitutionWhereInput): [Institution!]
  label(locale: Locale): String
  logo(locale: Locale): Asset
  name: String!
  organisationTFPSettings: OrganisationTFPSettings
  ownedAssets(after: String, before: String, first: Int, last: Int, orderBy: AssetOrderByInput, skip: Int, where: AssetWhereInput): [Asset!]
  status: Status!
  studentSolutions(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionOrderByInput, skip: Int, where: StudentSolutionWhereInput): [StudentSolution!]
  theme: Theme
  updatedAt: DateTime!
}

"A connection to a list of items."
type OrganisationConnection {
  aggregate: AggregateOrganisation!
  "A list of edges."
  edges: [OrganisationEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type OrganisationEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Organisation!
}

type OrganisationPreviousValues {
  createdAt: DateTime!
  id: ID!
  labelEN: String
  labelFR: String
  name: String!
  status: Status!
  updatedAt: DateTime!
}

type OrganisationSubscriptionPayload {
  mutation: MutationType!
  node: Organisation
  previousValues: OrganisationPreviousValues
  updatedFields: [String!]
}

type OrganisationTFPSettings implements Node {
  copyright(locale: Locale): String
  createdAt: DateTime!
  favicon: Asset
  id: ID!
  organisation: Organisation
  serviceLabel(locale: Locale): String
  serviceLogo(locale: Locale): Asset
  slsRelease: SlsRelease
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type OrganisationTFPSettingsConnection {
  aggregate: AggregateOrganisationTFPSettings!
  "A list of edges."
  edges: [OrganisationTFPSettingsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type OrganisationTFPSettingsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: OrganisationTFPSettings!
}

type OrganisationTFPSettingsPreviousValues {
  copyrightEN: String
  copyrightFR: String
  createdAt: DateTime!
  id: ID!
  serviceLabelEN: String
  serviceLabelFR: String
  status: Status!
  updatedAt: DateTime!
}

type OrganisationTFPSettingsSubscriptionPayload {
  mutation: MutationType!
  node: OrganisationTFPSettings
  previousValues: OrganisationTFPSettingsPreviousValues
  updatedFields: [String!]
}

"Information about pagination in a connection."
type PageInfo {
  "When paginating forwards, the cursor to continue."
  endCursor: String
  "When paginating forwards, are there more items?"
  hasNextPage: Boolean!
  "When paginating backwards, are there more items?"
  hasPreviousPage: Boolean!
  "When paginating backwards, the cursor to continue."
  startCursor: String
}

type Query {
  asset(where: AssetWhereUniqueInput!): Asset
  assetTransformations(where: AssetTransformationsWhereUniqueInput!): AssetTransformations
  assetTransformationses(after: String, before: String, first: Int, last: Int, orderBy: AssetTransformationsOrderByInput, skip: Int, where: AssetTransformationsWhereInput): [AssetTransformations]!
  assetTransformationsesConnection(after: String, before: String, first: Int, last: Int, orderBy: AssetTransformationsOrderByInput, skip: Int, where: AssetTransformationsWhereInput): AssetTransformationsConnection!
  assets(after: String, before: String, first: Int, last: Int, orderBy: AssetOrderByInput, skip: Int, where: AssetWhereInput): [Asset]!
  assetsConnection(after: String, before: String, first: Int, last: Int, orderBy: AssetOrderByInput, skip: Int, where: AssetWhereInput): AssetConnection!
  campus(where: CampusWhereUniqueInput!): Campus
  campuses(after: String, before: String, first: Int, last: Int, orderBy: CampusOrderByInput, skip: Int, where: CampusWhereInput): [Campus]!
  campusesConnection(after: String, before: String, first: Int, last: Int, orderBy: CampusOrderByInput, skip: Int, where: CampusWhereInput): CampusConnection!
  institution(where: InstitutionWhereUniqueInput!): Institution
  institutionChatbotSettings(where: InstitutionChatbotSettingsWhereUniqueInput!): InstitutionChatbotSettings
  institutionChatbotSettingses(after: String, before: String, first: Int, last: Int, orderBy: InstitutionChatbotSettingsOrderByInput, skip: Int, where: InstitutionChatbotSettingsWhereInput): [InstitutionChatbotSettings]!
  institutionChatbotSettingsesConnection(after: String, before: String, first: Int, last: Int, orderBy: InstitutionChatbotSettingsOrderByInput, skip: Int, where: InstitutionChatbotSettingsWhereInput): InstitutionChatbotSettingsConnection!
  institutionSLSSettings(where: InstitutionSLSSettingsWhereUniqueInput!): InstitutionSLSSettings
  institutionSLSSettingses(after: String, before: String, first: Int, last: Int, orderBy: InstitutionSLSSettingsOrderByInput, skip: Int, where: InstitutionSLSSettingsWhereInput): [InstitutionSLSSettings]!
  institutionSLSSettingsesConnection(after: String, before: String, first: Int, last: Int, orderBy: InstitutionSLSSettingsOrderByInput, skip: Int, where: InstitutionSLSSettingsWhereInput): InstitutionSLSSettingsConnection!
  institutionTFPSettings(where: InstitutionTFPSettingsWhereUniqueInput!): InstitutionTFPSettings
  institutionTFPSettingses(after: String, before: String, first: Int, last: Int, orderBy: InstitutionTFPSettingsOrderByInput, skip: Int, where: InstitutionTFPSettingsWhereInput): [InstitutionTFPSettings]!
  institutionTFPSettingsesConnection(after: String, before: String, first: Int, last: Int, orderBy: InstitutionTFPSettingsOrderByInput, skip: Int, where: InstitutionTFPSettingsWhereInput): InstitutionTFPSettingsConnection!
  institutions(after: String, before: String, first: Int, last: Int, orderBy: InstitutionOrderByInput, skip: Int, where: InstitutionWhereInput): [Institution]!
  institutionsConnection(after: String, before: String, first: Int, last: Int, orderBy: InstitutionOrderByInput, skip: Int, where: InstitutionWhereInput): InstitutionConnection!
  "Fetches an object given its ID"
  node(
    #The ID of an object
    id: ID!
  ): Node
  organisation(where: OrganisationWhereUniqueInput!): Organisation
  organisationTFPSettings(where: OrganisationTFPSettingsWhereUniqueInput!): OrganisationTFPSettings
  organisationTFPSettingses(after: String, before: String, first: Int, last: Int, orderBy: OrganisationTFPSettingsOrderByInput, skip: Int, where: OrganisationTFPSettingsWhereInput): [OrganisationTFPSettings]!
  organisationTFPSettingsesConnection(after: String, before: String, first: Int, last: Int, orderBy: OrganisationTFPSettingsOrderByInput, skip: Int, where: OrganisationTFPSettingsWhereInput): OrganisationTFPSettingsConnection!
  organisations(after: String, before: String, first: Int, last: Int, orderBy: OrganisationOrderByInput, skip: Int, where: OrganisationWhereInput): [Organisation]!
  organisationsConnection(after: String, before: String, first: Int, last: Int, orderBy: OrganisationOrderByInput, skip: Int, where: OrganisationWhereInput): OrganisationConnection!
  slsRelease(where: SlsReleaseWhereUniqueInput!): SlsRelease
  slsReleases(after: String, before: String, first: Int, last: Int, orderBy: SlsReleaseOrderByInput, skip: Int, where: SlsReleaseWhereInput): [SlsRelease]!
  slsReleasesConnection(after: String, before: String, first: Int, last: Int, orderBy: SlsReleaseOrderByInput, skip: Int, where: SlsReleaseWhereInput): SlsReleaseConnection!
  studentSolution(where: StudentSolutionWhereUniqueInput!): StudentSolution
  studentSolutionCategories(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionCategoryOrderByInput, skip: Int, where: StudentSolutionCategoryWhereInput): [StudentSolutionCategory]!
  studentSolutionCategoriesConnection(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionCategoryOrderByInput, skip: Int, where: StudentSolutionCategoryWhereInput): StudentSolutionCategoryConnection!
  studentSolutionCategory(where: StudentSolutionCategoryWhereUniqueInput!): StudentSolutionCategory
  studentSolutions(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionOrderByInput, skip: Int, where: StudentSolutionWhereInput): [StudentSolution]!
  studentSolutionsConnection(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionOrderByInput, skip: Int, where: StudentSolutionWhereInput): StudentSolutionConnection!
  tfpSettings(where: TfpSettingsWhereUniqueInput!): TfpSettings
  tfpSettingses(after: String, before: String, first: Int, last: Int, orderBy: TfpSettingsOrderByInput, skip: Int, where: TfpSettingsWhereInput): [TfpSettings]!
  tfpSettingsesConnection(after: String, before: String, first: Int, last: Int, orderBy: TfpSettingsOrderByInput, skip: Int, where: TfpSettingsWhereInput): TfpSettingsConnection!
  theme(where: ThemeWhereUniqueInput!): Theme
  themes(after: String, before: String, first: Int, last: Int, orderBy: ThemeOrderByInput, skip: Int, where: ThemeWhereInput): [Theme]!
  themesConnection(after: String, before: String, first: Int, last: Int, orderBy: ThemeOrderByInput, skip: Int, where: ThemeWhereInput): ThemeConnection!
}

"Custom type representing a rich text value comprising of raw rich text ast, html, markdown and text values"
type RichText {
  html: String
  markdown: String
  raw: RichTextAST
  text: String
}

type SlsRelease implements Node {
  createdAt: DateTime!
  description(locale: Locale): RichText
  id: ID!
  organisationsTFPSettings(after: String, before: String, first: Int, last: Int, orderBy: OrganisationTFPSettingsOrderByInput, skip: Int, where: OrganisationTFPSettingsWhereInput): [OrganisationTFPSettings!]
  release: String!
  releasedAt: DateTime!
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type SlsReleaseConnection {
  aggregate: AggregateSlsRelease!
  "A list of edges."
  edges: [SlsReleaseEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type SlsReleaseEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: SlsRelease!
}

type SlsReleasePreviousValues {
  createdAt: DateTime!
  descriptionEN: RichText
  descriptionFR: RichText
  id: ID!
  release: String!
  releasedAt: DateTime!
  status: Status!
  updatedAt: DateTime!
}

type SlsReleaseSubscriptionPayload {
  mutation: MutationType!
  node: SlsRelease
  previousValues: SlsReleasePreviousValues
  updatedFields: [String!]
}

type StudentSolution implements Node {
  additionalDocuments(locale: Locale): [Asset!]!
  additionalLinks(locale: Locale): [Json!]!
  agencies(locale: Locale): [Json!]!
  benefitsDescription(locale: Locale): RichText
  categories(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionCategoryOrderByInput, skip: Int, where: StudentSolutionCategoryWhereInput): [StudentSolutionCategory!]
  createdAt: DateTime!
  criteria: Json!
  criteriaDescription(locale: Locale): RichText
  description(locale: Locale): RichText
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  id: ID!
  interestRate: Float
  label(locale: Locale): String
  loanMaxAmount: Float
  logo(locale: Locale): Asset
  organisationOwner: Organisation
  specialPartnerOrganisation(locale: Locale): Json
  status: Status!
  updatedAt: DateTime!
}

type StudentSolutionCategory implements Node {
  altTexts(locale: Locale): [String!]!
  backgroundColor: String
  color: String
  createdAt: DateTime!
  displayOrder: Int
  id: ID!
  institution: Institution
  label(locale: Locale): String
  name: String!
  status: Status!
  studentSolutions(after: String, before: String, first: Int, last: Int, orderBy: StudentSolutionOrderByInput, skip: Int, where: StudentSolutionWhereInput): [StudentSolution!]
  updatedAt: DateTime!
}

"A connection to a list of items."
type StudentSolutionCategoryConnection {
  aggregate: AggregateStudentSolutionCategory!
  "A list of edges."
  edges: [StudentSolutionCategoryEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type StudentSolutionCategoryEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: StudentSolutionCategory!
}

type StudentSolutionCategoryPreviousValues {
  altTextsEN: [String!]!
  altTextsFR: [String!]!
  backgroundColor: String
  color: String
  createdAt: DateTime!
  displayOrder: Int
  id: ID!
  labelEN: String
  labelFR: String
  name: String!
  status: Status!
  updatedAt: DateTime!
}

type StudentSolutionCategorySubscriptionPayload {
  mutation: MutationType!
  node: StudentSolutionCategory
  previousValues: StudentSolutionCategoryPreviousValues
  updatedFields: [String!]
}

"A connection to a list of items."
type StudentSolutionConnection {
  aggregate: AggregateStudentSolution!
  "A list of edges."
  edges: [StudentSolutionEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type StudentSolutionEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: StudentSolution!
}

type StudentSolutionPreviousValues {
  additionalLinksEN: [Json!]!
  additionalLinksFR: [Json!]!
  agenciesEN: [Json!]!
  agenciesFR: [Json!]!
  benefitsDescriptionEN: RichText
  benefitsDescriptionFR: RichText
  createdAt: DateTime!
  criteria: Json!
  criteriaDescriptionEN: RichText
  criteriaDescriptionFR: RichText
  descriptionEN: RichText
  descriptionFR: RichText
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  id: ID!
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status!
  updatedAt: DateTime!
}

type StudentSolutionSubscriptionPayload {
  mutation: MutationType!
  node: StudentSolution
  previousValues: StudentSolutionPreviousValues
  updatedFields: [String!]
}

type TfpSettings implements Node {
  cgu(locale: Locale): RichText
  createdAt: DateTime!
  favicon: Asset
  id: ID!
  role: String!
  serviceLogo: Asset
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type TfpSettingsConnection {
  aggregate: AggregateTfpSettings!
  "A list of edges."
  edges: [TfpSettingsEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type TfpSettingsEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: TfpSettings!
}

type TfpSettingsPreviousValues {
  cguEN: RichText
  cguFR: RichText
  createdAt: DateTime!
  id: ID!
  role: String!
  status: Status!
  updatedAt: DateTime!
}

type TfpSettingsSubscriptionPayload {
  mutation: MutationType!
  node: TfpSettings
  previousValues: TfpSettingsPreviousValues
  updatedFields: [String!]
}

type Theme implements Node {
  createdAt: DateTime!
  font: String
  id: ID!
  institution: Institution
  organisation: Organisation
  primaryAltColor: String
  primaryColor: String!
  secondaryColor: String
  status: Status!
  updatedAt: DateTime!
}

"A connection to a list of items."
type ThemeConnection {
  aggregate: AggregateTheme!
  "A list of edges."
  edges: [ThemeEdge]!
  "Information to aid in pagination."
  pageInfo: PageInfo!
}

"An edge in a connection."
type ThemeEdge {
  "A cursor for use in pagination."
  cursor: String!
  "The item at the end of the edge."
  node: Theme!
}

type ThemePreviousValues {
  createdAt: DateTime!
  font: String
  id: ID!
  primaryAltColor: String
  primaryColor: String!
  secondaryColor: String
  status: Status!
  updatedAt: DateTime!
}

type ThemeSubscriptionPayload {
  mutation: MutationType!
  node: Theme
  previousValues: ThemePreviousValues
  updatedFields: [String!]
}

enum AssetOrderByInput {
  alt_ASC
  alt_DESC
  classes_ASC
  classes_DESC
  createdAt_ASC
  createdAt_DESC
  fileName_ASC
  fileName_DESC
  handle_ASC
  handle_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  importUrl_ASC
  importUrl_DESC
  key_ASC
  key_DESC
  linkTarget_ASC
  linkTarget_DESC
  linkUrl_ASC
  linkUrl_DESC
  mimeType_ASC
  mimeType_DESC
  size_ASC
  size_DESC
  status_ASC
  status_DESC
  style_ASC
  style_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

enum AssetTransformationsOrderByInput {
  createdAt_ASC
  createdAt_DESC
  height_ASC
  height_DESC
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  width_ASC
  width_DESC
}

enum CampusOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum DocumentFileTypes {
  doc
  docx
  html
  jpg
  odp
  ods
  odt
  pdf
  png
  ppt
  pptx
  svg
  txt
  webp
  xls
  xlsx
}

enum ImageFit {
  #Resizes the image to fit within the specified parameters without distorting, cropping, or changing the aspect ratio.
  clip
  #Resizes the image to fit the specified parameters exactly by removing any parts of the image that don't fit within the boundaries.
  crop
  #Resizes the image to fit within the parameters, but as opposed to 'fit:clip' will not scale the image if the image is smaller than the output size.
  max
  #Resizes the image to fit the specified parameters exactly by scaling the image to the desired size. The aspect ratio of the image is not respected and the image can be distorted using this method.
  scale
}

enum InstitutionChatbotSettingsOrderByInput {
  backFromCategoryTextEN_ASC
  backFromCategoryTextEN_DESC
  backFromCategoryTextFR_ASC
  backFromCategoryTextFR_DESC
  backFromSolutionTextEN_ASC
  backFromSolutionTextEN_DESC
  backFromSolutionTextFR_ASC
  backFromSolutionTextFR_DESC
  createdAt_ASC
  createdAt_DESC
  descriptionEN_ASC
  descriptionEN_DESC
  descriptionFR_ASC
  descriptionFR_DESC
  id_ASC
  id_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  selectCampusTextEN_ASC
  selectCampusTextEN_DESC
  selectCampusTextFR_ASC
  selectCampusTextFR_DESC
  selectCategoryTextEN_ASC
  selectCategoryTextEN_DESC
  selectCategoryTextFR_ASC
  selectCategoryTextFR_DESC
  selectInstitutionTextEN_ASC
  selectInstitutionTextEN_DESC
  selectInstitutionTextFR_ASC
  selectInstitutionTextFR_DESC
  selectStudentSolutionTextEN_ASC
  selectStudentSolutionTextEN_DESC
  selectStudentSolutionTextFR_ASC
  selectStudentSolutionTextFR_DESC
  status_ASC
  status_DESC
  studentSolutionsIntroductionTextEN_ASC
  studentSolutionsIntroductionTextEN_DESC
  studentSolutionsIntroductionTextFR_ASC
  studentSolutionsIntroductionTextFR_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum InstitutionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  labelShortEN_ASC
  labelShortEN_DESC
  labelShortFR_ASC
  labelShortFR_DESC
  name_ASC
  name_DESC
  path_ASC
  path_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum InstitutionSLSSettingsOrderByInput {
  borrowingAssistanceDescriptionEN_ASC
  borrowingAssistanceDescriptionEN_DESC
  borrowingAssistanceDescriptionFR_ASC
  borrowingAssistanceDescriptionFR_DESC
  borrowingAssistanceTitleEN_ASC
  borrowingAssistanceTitleEN_DESC
  borrowingAssistanceTitleFR_ASC
  borrowingAssistanceTitleFR_DESC
  campusFieldLabelEN_ASC
  campusFieldLabelEN_DESC
  campusFieldLabelFR_ASC
  campusFieldLabelFR_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum InstitutionTFPSettingsOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  landingWelcomeTextEN_ASC
  landingWelcomeTextEN_DESC
  landingWelcomeTextFR_ASC
  landingWelcomeTextFR_DESC
  landingWelcomeTitleEN_ASC
  landingWelcomeTitleEN_DESC
  landingWelcomeTitleFR_ASC
  landingWelcomeTitleFR_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum Locale {
  EN
  FR
}

enum MutationType {
  CREATED
  DELETED
  UPDATED
}

enum OrganisationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum OrganisationTFPSettingsOrderByInput {
  copyrightEN_ASC
  copyrightEN_DESC
  copyrightFR_ASC
  copyrightFR_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  serviceLabelEN_ASC
  serviceLabelEN_DESC
  serviceLabelFR_ASC
  serviceLabelFR_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum SlsReleaseOrderByInput {
  createdAt_ASC
  createdAt_DESC
  descriptionEN_ASC
  descriptionEN_DESC
  descriptionFR_ASC
  descriptionFR_DESC
  id_ASC
  id_DESC
  release_ASC
  release_DESC
  releasedAt_ASC
  releasedAt_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum Status {
  ARCHIVED
  DRAFT
  PUBLISHED
}

enum StudentSolutionCategoryOrderByInput {
  backgroundColor_ASC
  backgroundColor_DESC
  color_ASC
  color_DESC
  createdAt_ASC
  createdAt_DESC
  displayOrder_ASC
  displayOrder_DESC
  id_ASC
  id_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum StudentSolutionOrderByInput {
  benefitsDescriptionEN_ASC
  benefitsDescriptionEN_DESC
  benefitsDescriptionFR_ASC
  benefitsDescriptionFR_DESC
  createdAt_ASC
  createdAt_DESC
  criteriaDescriptionEN_ASC
  criteriaDescriptionEN_DESC
  criteriaDescriptionFR_ASC
  criteriaDescriptionFR_DESC
  criteria_ASC
  criteria_DESC
  descriptionEN_ASC
  descriptionEN_DESC
  descriptionFR_ASC
  descriptionFR_DESC
  displayOrder_ASC
  displayOrder_DESC
  displaySLS_ASC
  displaySLS_DESC
  expiresAt_ASC
  expiresAt_DESC
  id_ASC
  id_DESC
  interestRate_ASC
  interestRate_DESC
  labelEN_ASC
  labelEN_DESC
  labelFR_ASC
  labelFR_DESC
  loanMaxAmount_ASC
  loanMaxAmount_DESC
  specialPartnerOrganisationEN_ASC
  specialPartnerOrganisationEN_DESC
  specialPartnerOrganisationFR_ASC
  specialPartnerOrganisationFR_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum TfpSettingsOrderByInput {
  cguEN_ASC
  cguEN_DESC
  cguFR_ASC
  cguFR_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  role_ASC
  role_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum ThemeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  font_ASC
  font_DESC
  id_ASC
  id_DESC
  primaryAltColor_ASC
  primaryAltColor_DESC
  primaryColor_ASC
  primaryColor_DESC
  secondaryColor_ASC
  secondaryColor_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input AssetCreateInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutAdditionalDocumentsStudentSolutionENInput!]
}

input AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutAdditionalDocumentsStudentSolutionFRInput!]
}

input AssetCreateManyWithoutOrganisationOwnerInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutOrganisationOwnerInput!]
}

input AssetCreateOneWithoutDefaultTransformationsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutDefaultTransformationsInput
}

input AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutFaviconOrganisationTFPSettingsInput
}

input AssetCreateOneWithoutFaviconTfpSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutFaviconTfpSettingsInput
}

input AssetCreateOneWithoutLogoInstitutionENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoInstitutionENInput
}

input AssetCreateOneWithoutLogoInstitutionFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoInstitutionFRInput
}

input AssetCreateOneWithoutLogoOrganisationENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoOrganisationENInput
}

input AssetCreateOneWithoutLogoOrganisationFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoOrganisationFRInput
}

input AssetCreateOneWithoutLogoStudentSolutionENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoStudentSolutionENInput
}

input AssetCreateOneWithoutLogoStudentSolutionFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoStudentSolutionFRInput
}

input AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsENInput
}

input AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsFRInput
}

input AssetCreateOneWithoutServiceLogoTfpSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoTfpSettingsInput
}

input AssetCreateWithoutAdditionalDocumentsStudentSolutionENInput {
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutAdditionalDocumentsStudentSolutionFRInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutDefaultTransformationsInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutFaviconOrganisationTFPSettingsInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutFaviconTfpSettingsInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoInstitutionENInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoInstitutionFRInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoOrganisationENInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoOrganisationFRInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoStudentSolutionENInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutLogoStudentSolutionFRInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutOrganisationOwnerInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutServiceLogoOrganisationTFPSettingsENInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutServiceLogoOrganisationTFPSettingsFRInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoTfpSettings: TfpSettingsCreateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetCreateWithoutServiceLogoTfpSettingsInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionCreateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsCreateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsCreateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsCreateManyWithoutFaviconInput
  fileName: String!
  handle: String!
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionCreateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionCreateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationCreateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationCreateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionCreateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionCreateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationCreateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetScalarWhereInput {
  "Logical AND on all given filters."
  AND: [AssetScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [AssetScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [AssetScalarWhereInput!]
  alt: String
  "All values containing the given string."
  alt_contains: String
  "All values ending with the given string."
  alt_ends_with: String
  "All values greater than the given value."
  alt_gt: String
  "All values greater than or equal the given value."
  alt_gte: String
  "All values that are contained in given list."
  alt_in: [String!]
  "All values less than the given value."
  alt_lt: String
  "All values less than or equal the given value."
  alt_lte: String
  "All values that are not equal to given value."
  alt_not: String
  "All values not containing the given string."
  alt_not_contains: String
  "All values not ending with the given string."
  alt_not_ends_with: String
  "All values that are not contained in given list."
  alt_not_in: [String!]
  "All values not starting with the given string."
  alt_not_starts_with: String
  "All values starting with the given string."
  alt_starts_with: String
  classes: String
  "All values containing the given string."
  classes_contains: String
  "All values ending with the given string."
  classes_ends_with: String
  "All values greater than the given value."
  classes_gt: String
  "All values greater than or equal the given value."
  classes_gte: String
  "All values that are contained in given list."
  classes_in: [String!]
  "All values less than the given value."
  classes_lt: String
  "All values less than or equal the given value."
  classes_lte: String
  "All values that are not equal to given value."
  classes_not: String
  "All values not containing the given string."
  classes_not_contains: String
  "All values not ending with the given string."
  classes_not_ends_with: String
  "All values that are not contained in given list."
  classes_not_in: [String!]
  "All values not starting with the given string."
  classes_not_starts_with: String
  "All values starting with the given string."
  classes_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  fileName: String
  "All values containing the given string."
  fileName_contains: String
  "All values ending with the given string."
  fileName_ends_with: String
  "All values greater than the given value."
  fileName_gt: String
  "All values greater than or equal the given value."
  fileName_gte: String
  "All values that are contained in given list."
  fileName_in: [String!]
  "All values less than the given value."
  fileName_lt: String
  "All values less than or equal the given value."
  fileName_lte: String
  "All values that are not equal to given value."
  fileName_not: String
  "All values not containing the given string."
  fileName_not_contains: String
  "All values not ending with the given string."
  fileName_not_ends_with: String
  "All values that are not contained in given list."
  fileName_not_in: [String!]
  "All values not starting with the given string."
  fileName_not_starts_with: String
  "All values starting with the given string."
  fileName_starts_with: String
  handle: String
  "All values containing the given string."
  handle_contains: String
  "All values ending with the given string."
  handle_ends_with: String
  "All values greater than the given value."
  handle_gt: String
  "All values greater than or equal the given value."
  handle_gte: String
  "All values that are contained in given list."
  handle_in: [String!]
  "All values less than the given value."
  handle_lt: String
  "All values less than or equal the given value."
  handle_lte: String
  "All values that are not equal to given value."
  handle_not: String
  "All values not containing the given string."
  handle_not_contains: String
  "All values not ending with the given string."
  handle_not_ends_with: String
  "All values that are not contained in given list."
  handle_not_in: [String!]
  "All values not starting with the given string."
  handle_not_starts_with: String
  "All values starting with the given string."
  handle_starts_with: String
  height: Float
  "All values greater than the given value."
  height_gt: Float
  "All values greater than or equal the given value."
  height_gte: Float
  "All values that are contained in given list."
  height_in: [Float!]
  "All values less than the given value."
  height_lt: Float
  "All values less than or equal the given value."
  height_lte: Float
  "All values that are not equal to given value."
  height_not: Float
  "All values that are not contained in given list."
  height_not_in: [Float!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  importUrl: String
  "All values containing the given string."
  importUrl_contains: String
  "All values ending with the given string."
  importUrl_ends_with: String
  "All values greater than the given value."
  importUrl_gt: String
  "All values greater than or equal the given value."
  importUrl_gte: String
  "All values that are contained in given list."
  importUrl_in: [String!]
  "All values less than the given value."
  importUrl_lt: String
  "All values less than or equal the given value."
  importUrl_lte: String
  "All values that are not equal to given value."
  importUrl_not: String
  "All values not containing the given string."
  importUrl_not_contains: String
  "All values not ending with the given string."
  importUrl_not_ends_with: String
  "All values that are not contained in given list."
  importUrl_not_in: [String!]
  "All values not starting with the given string."
  importUrl_not_starts_with: String
  "All values starting with the given string."
  importUrl_starts_with: String
  key: String
  "All values containing the given string."
  key_contains: String
  "All values ending with the given string."
  key_ends_with: String
  "All values greater than the given value."
  key_gt: String
  "All values greater than or equal the given value."
  key_gte: String
  "All values that are contained in given list."
  key_in: [String!]
  "All values less than the given value."
  key_lt: String
  "All values less than or equal the given value."
  key_lte: String
  "All values that are not equal to given value."
  key_not: String
  "All values not containing the given string."
  key_not_contains: String
  "All values not ending with the given string."
  key_not_ends_with: String
  "All values that are not contained in given list."
  key_not_in: [String!]
  "All values not starting with the given string."
  key_not_starts_with: String
  "All values starting with the given string."
  key_starts_with: String
  linkTarget: String
  "All values containing the given string."
  linkTarget_contains: String
  "All values ending with the given string."
  linkTarget_ends_with: String
  "All values greater than the given value."
  linkTarget_gt: String
  "All values greater than or equal the given value."
  linkTarget_gte: String
  "All values that are contained in given list."
  linkTarget_in: [String!]
  "All values less than the given value."
  linkTarget_lt: String
  "All values less than or equal the given value."
  linkTarget_lte: String
  "All values that are not equal to given value."
  linkTarget_not: String
  "All values not containing the given string."
  linkTarget_not_contains: String
  "All values not ending with the given string."
  linkTarget_not_ends_with: String
  "All values that are not contained in given list."
  linkTarget_not_in: [String!]
  "All values not starting with the given string."
  linkTarget_not_starts_with: String
  "All values starting with the given string."
  linkTarget_starts_with: String
  linkUrl: String
  "All values containing the given string."
  linkUrl_contains: String
  "All values ending with the given string."
  linkUrl_ends_with: String
  "All values greater than the given value."
  linkUrl_gt: String
  "All values greater than or equal the given value."
  linkUrl_gte: String
  "All values that are contained in given list."
  linkUrl_in: [String!]
  "All values less than the given value."
  linkUrl_lt: String
  "All values less than or equal the given value."
  linkUrl_lte: String
  "All values that are not equal to given value."
  linkUrl_not: String
  "All values not containing the given string."
  linkUrl_not_contains: String
  "All values not ending with the given string."
  linkUrl_not_ends_with: String
  "All values that are not contained in given list."
  linkUrl_not_in: [String!]
  "All values not starting with the given string."
  linkUrl_not_starts_with: String
  "All values starting with the given string."
  linkUrl_starts_with: String
  mimeType: String
  "All values containing the given string."
  mimeType_contains: String
  "All values ending with the given string."
  mimeType_ends_with: String
  "All values greater than the given value."
  mimeType_gt: String
  "All values greater than or equal the given value."
  mimeType_gte: String
  "All values that are contained in given list."
  mimeType_in: [String!]
  "All values less than the given value."
  mimeType_lt: String
  "All values less than or equal the given value."
  mimeType_lte: String
  "All values that are not equal to given value."
  mimeType_not: String
  "All values not containing the given string."
  mimeType_not_contains: String
  "All values not ending with the given string."
  mimeType_not_ends_with: String
  "All values that are not contained in given list."
  mimeType_not_in: [String!]
  "All values not starting with the given string."
  mimeType_not_starts_with: String
  "All values starting with the given string."
  mimeType_starts_with: String
  size: Float
  "All values greater than the given value."
  size_gt: Float
  "All values greater than or equal the given value."
  size_gte: Float
  "All values that are contained in given list."
  size_in: [Float!]
  "All values less than the given value."
  size_lt: Float
  "All values less than or equal the given value."
  size_lte: Float
  "All values that are not equal to given value."
  size_not: Float
  "All values that are not contained in given list."
  size_not_in: [Float!]
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  style: String
  "All values containing the given string."
  style_contains: String
  "All values ending with the given string."
  style_ends_with: String
  "All values greater than the given value."
  style_gt: String
  "All values greater than or equal the given value."
  style_gte: String
  "All values that are contained in given list."
  style_in: [String!]
  "All values less than the given value."
  style_lt: String
  "All values less than or equal the given value."
  style_lte: String
  "All values that are not equal to given value."
  style_not: String
  "All values not containing the given string."
  style_not_contains: String
  "All values not ending with the given string."
  style_not_ends_with: String
  "All values that are not contained in given list."
  style_not_in: [String!]
  "All values not starting with the given string."
  style_not_starts_with: String
  "All values starting with the given string."
  style_starts_with: String
  title: String
  "All values containing the given string."
  title_contains: String
  "All values ending with the given string."
  title_ends_with: String
  "All values greater than the given value."
  title_gt: String
  "All values greater than or equal the given value."
  title_gte: String
  "All values that are contained in given list."
  title_in: [String!]
  "All values less than the given value."
  title_lt: String
  "All values less than or equal the given value."
  title_lte: String
  "All values that are not equal to given value."
  title_not: String
  "All values not containing the given string."
  title_not_contains: String
  "All values not ending with the given string."
  title_not_ends_with: String
  "All values that are not contained in given list."
  title_not_in: [String!]
  "All values not starting with the given string."
  title_not_starts_with: String
  "All values starting with the given string."
  title_starts_with: String
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
  width: Float
  "All values greater than the given value."
  width_gt: Float
  "All values greater than or equal the given value."
  width_gte: Float
  "All values that are contained in given list."
  width_in: [Float!]
  "All values less than the given value."
  width_lt: Float
  "All values less than or equal the given value."
  width_lte: Float
  "All values that are not equal to given value."
  width_not: Float
  "All values that are not contained in given list."
  width_not_in: [Float!]
}

input AssetSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [AssetSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [AssetSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [AssetSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: AssetWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

"Transformations for Assets"
input AssetTransformationInput {
  document: DocumentTransformationInput
  image: ImageTransformationInput
  "Pass `true` if you want to validate the passed transformation parameters"
  validateOptions: Boolean = false
}

input AssetTransformationsCreateInput {
  asset: AssetCreateOneWithoutDefaultTransformationsInput
  height: Int
  status: Status
  width: Int
}

input AssetTransformationsCreateOneWithoutAssetInput {
  connect: AssetTransformationsWhereUniqueInput
  create: AssetTransformationsCreateWithoutAssetInput
}

input AssetTransformationsCreateWithoutAssetInput {
  height: Int
  status: Status
  width: Int
}

input AssetTransformationsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [AssetTransformationsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [AssetTransformationsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [AssetTransformationsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: AssetTransformationsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input AssetTransformationsUpdateInput {
  asset: AssetUpdateOneWithoutDefaultTransformationsInput
  height: Int
  status: Status
  width: Int
}

input AssetTransformationsUpdateManyMutationInput {
  height: Int
  status: Status
  width: Int
}

input AssetTransformationsUpdateOneWithoutAssetInput {
  connect: AssetTransformationsWhereUniqueInput
  create: AssetTransformationsCreateWithoutAssetInput
  delete: Boolean
  disconnect: Boolean
  update: AssetTransformationsUpdateWithoutAssetDataInput
  upsert: AssetTransformationsUpsertWithoutAssetInput
}

input AssetTransformationsUpdateWithoutAssetDataInput {
  height: Int
  status: Status
  width: Int
}

input AssetTransformationsUpsertWithoutAssetInput {
  create: AssetTransformationsCreateWithoutAssetInput!
  update: AssetTransformationsUpdateWithoutAssetDataInput!
}

input AssetTransformationsWhereInput {
  "Logical AND on all given filters."
  AND: [AssetTransformationsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [AssetTransformationsWhereInput!]
  "Logical OR on all given filters."
  OR: [AssetTransformationsWhereInput!]
  asset: AssetWhereInput
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  height: Int
  "All values greater than the given value."
  height_gt: Int
  "All values greater than or equal the given value."
  height_gte: Int
  "All values that are contained in given list."
  height_in: [Int!]
  "All values less than the given value."
  height_lt: Int
  "All values less than or equal the given value."
  height_lte: Int
  "All values that are not equal to given value."
  height_not: Int
  "All values that are not contained in given list."
  height_not_in: [Int!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
  width: Int
  "All values greater than the given value."
  width_gt: Int
  "All values greater than or equal the given value."
  width_gte: Int
  "All values that are contained in given list."
  width_in: [Int!]
  "All values less than the given value."
  width_lt: Int
  "All values less than or equal the given value."
  width_lte: Int
  "All values that are not equal to given value."
  width_not: Int
  "All values that are not contained in given list."
  width_not_in: [Int!]
}

input AssetTransformationsWhereUniqueInput {
  id: ID
}

input AssetUpdateInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateManyDataInput {
  alt: String
  classes: String
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  mimeType: String
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateManyMutationInput {
  alt: String
  classes: String
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  mimeType: String
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateManyWithWhereNestedInput {
  data: AssetUpdateManyDataInput!
  where: AssetScalarWhereInput!
}

input AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutAdditionalDocumentsStudentSolutionENInput!]
  delete: [AssetWhereUniqueInput!]
  deleteMany: [AssetScalarWhereInput!]
  disconnect: [AssetWhereUniqueInput!]
  set: [AssetWhereUniqueInput!]
  update: [AssetUpdateWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionENInput!]
  updateMany: [AssetUpdateManyWithWhereNestedInput!]
  upsert: [AssetUpsertWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionENInput!]
}

input AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutAdditionalDocumentsStudentSolutionFRInput!]
  delete: [AssetWhereUniqueInput!]
  deleteMany: [AssetScalarWhereInput!]
  disconnect: [AssetWhereUniqueInput!]
  set: [AssetWhereUniqueInput!]
  update: [AssetUpdateWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionFRInput!]
  updateMany: [AssetUpdateManyWithWhereNestedInput!]
  upsert: [AssetUpsertWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionFRInput!]
}

input AssetUpdateManyWithoutOrganisationOwnerInput {
  connect: [AssetWhereUniqueInput!]
  create: [AssetCreateWithoutOrganisationOwnerInput!]
  delete: [AssetWhereUniqueInput!]
  deleteMany: [AssetScalarWhereInput!]
  disconnect: [AssetWhereUniqueInput!]
  set: [AssetWhereUniqueInput!]
  update: [AssetUpdateWithWhereUniqueWithoutOrganisationOwnerInput!]
  updateMany: [AssetUpdateManyWithWhereNestedInput!]
  upsert: [AssetUpsertWithWhereUniqueWithoutOrganisationOwnerInput!]
}

input AssetUpdateOneWithoutDefaultTransformationsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutDefaultTransformationsInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutDefaultTransformationsDataInput
  upsert: AssetUpsertWithoutDefaultTransformationsInput
}

input AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutFaviconOrganisationTFPSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutFaviconOrganisationTFPSettingsDataInput
  upsert: AssetUpsertWithoutFaviconOrganisationTFPSettingsInput
}

input AssetUpdateOneWithoutFaviconTfpSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutFaviconTfpSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutFaviconTfpSettingsDataInput
  upsert: AssetUpsertWithoutFaviconTfpSettingsInput
}

input AssetUpdateOneWithoutLogoInstitutionENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoInstitutionENInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoInstitutionENDataInput
  upsert: AssetUpsertWithoutLogoInstitutionENInput
}

input AssetUpdateOneWithoutLogoInstitutionFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoInstitutionFRInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoInstitutionFRDataInput
  upsert: AssetUpsertWithoutLogoInstitutionFRInput
}

input AssetUpdateOneWithoutLogoOrganisationENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoOrganisationENInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoOrganisationENDataInput
  upsert: AssetUpsertWithoutLogoOrganisationENInput
}

input AssetUpdateOneWithoutLogoOrganisationFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoOrganisationFRInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoOrganisationFRDataInput
  upsert: AssetUpsertWithoutLogoOrganisationFRInput
}

input AssetUpdateOneWithoutLogoStudentSolutionENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoStudentSolutionENInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoStudentSolutionENDataInput
  upsert: AssetUpsertWithoutLogoStudentSolutionENInput
}

input AssetUpdateOneWithoutLogoStudentSolutionFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutLogoStudentSolutionFRInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutLogoStudentSolutionFRDataInput
  upsert: AssetUpsertWithoutLogoStudentSolutionFRInput
}

input AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsENInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutServiceLogoOrganisationTFPSettingsENDataInput
  upsert: AssetUpsertWithoutServiceLogoOrganisationTFPSettingsENInput
}

input AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsFRInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutServiceLogoOrganisationTFPSettingsFRDataInput
  upsert: AssetUpsertWithoutServiceLogoOrganisationTFPSettingsFRInput
}

input AssetUpdateOneWithoutServiceLogoTfpSettingsInput {
  connect: AssetWhereUniqueInput
  create: AssetCreateWithoutServiceLogoTfpSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: AssetUpdateWithoutServiceLogoTfpSettingsDataInput
  upsert: AssetUpsertWithoutServiceLogoTfpSettingsInput
}

input AssetUpdateWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionENInput {
  data: AssetUpdateWithoutAdditionalDocumentsStudentSolutionENDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpdateWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionFRInput {
  data: AssetUpdateWithoutAdditionalDocumentsStudentSolutionFRDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpdateWithWhereUniqueWithoutOrganisationOwnerInput {
  data: AssetUpdateWithoutOrganisationOwnerDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpdateWithoutAdditionalDocumentsStudentSolutionENDataInput {
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutAdditionalDocumentsStudentSolutionFRDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutDefaultTransformationsDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutFaviconOrganisationTFPSettingsDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutFaviconTfpSettingsDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoInstitutionENDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoInstitutionFRDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoOrganisationENDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoOrganisationFRDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoStudentSolutionENDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutLogoStudentSolutionFRDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutOrganisationOwnerDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutServiceLogoOrganisationTFPSettingsENDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutServiceLogoOrganisationTFPSettingsFRDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoTfpSettings: TfpSettingsUpdateManyWithoutServiceLogoInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpdateWithoutServiceLogoTfpSettingsDataInput {
  additionalDocumentsStudentSolutionEN: StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput
  additionalDocumentsStudentSolutionFR: StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput
  alt: String
  classes: String
  defaultTransformations: AssetTransformationsUpdateOneWithoutAssetInput
  faviconOrganisationTFPSettings: OrganisationTFPSettingsUpdateManyWithoutFaviconInput
  faviconTfpSettings: TfpSettingsUpdateManyWithoutFaviconInput
  fileName: String
  handle: String
  height: Float
  importUrl: String
  key: String
  linkTarget: String
  linkUrl: String
  logoInstitutionEN: InstitutionUpdateManyWithoutLogoENInput
  logoInstitutionFR: InstitutionUpdateManyWithoutLogoFRInput
  logoOrganisationEN: OrganisationUpdateManyWithoutLogoENInput
  logoOrganisationFR: OrganisationUpdateManyWithoutLogoFRInput
  logoStudentSolutionEN: StudentSolutionUpdateManyWithoutLogoENInput
  logoStudentSolutionFR: StudentSolutionUpdateManyWithoutLogoFRInput
  mimeType: String
  organisationOwner: OrganisationUpdateOneWithoutOwnedAssetsInput
  serviceLogoOrganisationTFPSettingsEN: OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput
  serviceLogoOrganisationTFPSettingsFR: OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput
  size: Float
  status: Status
  style: String
  title: String
  width: Float
}

input AssetUpsertWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionENInput {
  create: AssetCreateWithoutAdditionalDocumentsStudentSolutionENInput!
  update: AssetUpdateWithoutAdditionalDocumentsStudentSolutionENDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpsertWithWhereUniqueWithoutAdditionalDocumentsStudentSolutionFRInput {
  create: AssetCreateWithoutAdditionalDocumentsStudentSolutionFRInput!
  update: AssetUpdateWithoutAdditionalDocumentsStudentSolutionFRDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpsertWithWhereUniqueWithoutOrganisationOwnerInput {
  create: AssetCreateWithoutOrganisationOwnerInput!
  update: AssetUpdateWithoutOrganisationOwnerDataInput!
  where: AssetWhereUniqueInput!
}

input AssetUpsertWithoutDefaultTransformationsInput {
  create: AssetCreateWithoutDefaultTransformationsInput!
  update: AssetUpdateWithoutDefaultTransformationsDataInput!
}

input AssetUpsertWithoutFaviconOrganisationTFPSettingsInput {
  create: AssetCreateWithoutFaviconOrganisationTFPSettingsInput!
  update: AssetUpdateWithoutFaviconOrganisationTFPSettingsDataInput!
}

input AssetUpsertWithoutFaviconTfpSettingsInput {
  create: AssetCreateWithoutFaviconTfpSettingsInput!
  update: AssetUpdateWithoutFaviconTfpSettingsDataInput!
}

input AssetUpsertWithoutLogoInstitutionENInput {
  create: AssetCreateWithoutLogoInstitutionENInput!
  update: AssetUpdateWithoutLogoInstitutionENDataInput!
}

input AssetUpsertWithoutLogoInstitutionFRInput {
  create: AssetCreateWithoutLogoInstitutionFRInput!
  update: AssetUpdateWithoutLogoInstitutionFRDataInput!
}

input AssetUpsertWithoutLogoOrganisationENInput {
  create: AssetCreateWithoutLogoOrganisationENInput!
  update: AssetUpdateWithoutLogoOrganisationENDataInput!
}

input AssetUpsertWithoutLogoOrganisationFRInput {
  create: AssetCreateWithoutLogoOrganisationFRInput!
  update: AssetUpdateWithoutLogoOrganisationFRDataInput!
}

input AssetUpsertWithoutLogoStudentSolutionENInput {
  create: AssetCreateWithoutLogoStudentSolutionENInput!
  update: AssetUpdateWithoutLogoStudentSolutionENDataInput!
}

input AssetUpsertWithoutLogoStudentSolutionFRInput {
  create: AssetCreateWithoutLogoStudentSolutionFRInput!
  update: AssetUpdateWithoutLogoStudentSolutionFRDataInput!
}

input AssetUpsertWithoutServiceLogoOrganisationTFPSettingsENInput {
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsENInput!
  update: AssetUpdateWithoutServiceLogoOrganisationTFPSettingsENDataInput!
}

input AssetUpsertWithoutServiceLogoOrganisationTFPSettingsFRInput {
  create: AssetCreateWithoutServiceLogoOrganisationTFPSettingsFRInput!
  update: AssetUpdateWithoutServiceLogoOrganisationTFPSettingsFRDataInput!
}

input AssetUpsertWithoutServiceLogoTfpSettingsInput {
  create: AssetCreateWithoutServiceLogoTfpSettingsInput!
  update: AssetUpdateWithoutServiceLogoTfpSettingsDataInput!
}

input AssetWhereInput {
  "Logical AND on all given filters."
  AND: [AssetWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [AssetWhereInput!]
  "Logical OR on all given filters."
  OR: [AssetWhereInput!]
  additionalDocumentsStudentSolutionEN_every: StudentSolutionWhereInput
  additionalDocumentsStudentSolutionEN_none: StudentSolutionWhereInput
  additionalDocumentsStudentSolutionEN_some: StudentSolutionWhereInput
  additionalDocumentsStudentSolutionFR_every: StudentSolutionWhereInput
  additionalDocumentsStudentSolutionFR_none: StudentSolutionWhereInput
  additionalDocumentsStudentSolutionFR_some: StudentSolutionWhereInput
  alt: String
  "All values containing the given string."
  alt_contains: String
  "All values ending with the given string."
  alt_ends_with: String
  "All values greater than the given value."
  alt_gt: String
  "All values greater than or equal the given value."
  alt_gte: String
  "All values that are contained in given list."
  alt_in: [String!]
  "All values less than the given value."
  alt_lt: String
  "All values less than or equal the given value."
  alt_lte: String
  "All values that are not equal to given value."
  alt_not: String
  "All values not containing the given string."
  alt_not_contains: String
  "All values not ending with the given string."
  alt_not_ends_with: String
  "All values that are not contained in given list."
  alt_not_in: [String!]
  "All values not starting with the given string."
  alt_not_starts_with: String
  "All values starting with the given string."
  alt_starts_with: String
  classes: String
  "All values containing the given string."
  classes_contains: String
  "All values ending with the given string."
  classes_ends_with: String
  "All values greater than the given value."
  classes_gt: String
  "All values greater than or equal the given value."
  classes_gte: String
  "All values that are contained in given list."
  classes_in: [String!]
  "All values less than the given value."
  classes_lt: String
  "All values less than or equal the given value."
  classes_lte: String
  "All values that are not equal to given value."
  classes_not: String
  "All values not containing the given string."
  classes_not_contains: String
  "All values not ending with the given string."
  classes_not_ends_with: String
  "All values that are not contained in given list."
  classes_not_in: [String!]
  "All values not starting with the given string."
  classes_not_starts_with: String
  "All values starting with the given string."
  classes_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  defaultTransformations: AssetTransformationsWhereInput
  faviconOrganisationTFPSettings_every: OrganisationTFPSettingsWhereInput
  faviconOrganisationTFPSettings_none: OrganisationTFPSettingsWhereInput
  faviconOrganisationTFPSettings_some: OrganisationTFPSettingsWhereInput
  faviconTfpSettings_every: TfpSettingsWhereInput
  faviconTfpSettings_none: TfpSettingsWhereInput
  faviconTfpSettings_some: TfpSettingsWhereInput
  fileName: String
  "All values containing the given string."
  fileName_contains: String
  "All values ending with the given string."
  fileName_ends_with: String
  "All values greater than the given value."
  fileName_gt: String
  "All values greater than or equal the given value."
  fileName_gte: String
  "All values that are contained in given list."
  fileName_in: [String!]
  "All values less than the given value."
  fileName_lt: String
  "All values less than or equal the given value."
  fileName_lte: String
  "All values that are not equal to given value."
  fileName_not: String
  "All values not containing the given string."
  fileName_not_contains: String
  "All values not ending with the given string."
  fileName_not_ends_with: String
  "All values that are not contained in given list."
  fileName_not_in: [String!]
  "All values not starting with the given string."
  fileName_not_starts_with: String
  "All values starting with the given string."
  fileName_starts_with: String
  handle: String
  "All values containing the given string."
  handle_contains: String
  "All values ending with the given string."
  handle_ends_with: String
  "All values greater than the given value."
  handle_gt: String
  "All values greater than or equal the given value."
  handle_gte: String
  "All values that are contained in given list."
  handle_in: [String!]
  "All values less than the given value."
  handle_lt: String
  "All values less than or equal the given value."
  handle_lte: String
  "All values that are not equal to given value."
  handle_not: String
  "All values not containing the given string."
  handle_not_contains: String
  "All values not ending with the given string."
  handle_not_ends_with: String
  "All values that are not contained in given list."
  handle_not_in: [String!]
  "All values not starting with the given string."
  handle_not_starts_with: String
  "All values starting with the given string."
  handle_starts_with: String
  height: Float
  "All values greater than the given value."
  height_gt: Float
  "All values greater than or equal the given value."
  height_gte: Float
  "All values that are contained in given list."
  height_in: [Float!]
  "All values less than the given value."
  height_lt: Float
  "All values less than or equal the given value."
  height_lte: Float
  "All values that are not equal to given value."
  height_not: Float
  "All values that are not contained in given list."
  height_not_in: [Float!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  importUrl: String
  "All values containing the given string."
  importUrl_contains: String
  "All values ending with the given string."
  importUrl_ends_with: String
  "All values greater than the given value."
  importUrl_gt: String
  "All values greater than or equal the given value."
  importUrl_gte: String
  "All values that are contained in given list."
  importUrl_in: [String!]
  "All values less than the given value."
  importUrl_lt: String
  "All values less than or equal the given value."
  importUrl_lte: String
  "All values that are not equal to given value."
  importUrl_not: String
  "All values not containing the given string."
  importUrl_not_contains: String
  "All values not ending with the given string."
  importUrl_not_ends_with: String
  "All values that are not contained in given list."
  importUrl_not_in: [String!]
  "All values not starting with the given string."
  importUrl_not_starts_with: String
  "All values starting with the given string."
  importUrl_starts_with: String
  key: String
  "All values containing the given string."
  key_contains: String
  "All values ending with the given string."
  key_ends_with: String
  "All values greater than the given value."
  key_gt: String
  "All values greater than or equal the given value."
  key_gte: String
  "All values that are contained in given list."
  key_in: [String!]
  "All values less than the given value."
  key_lt: String
  "All values less than or equal the given value."
  key_lte: String
  "All values that are not equal to given value."
  key_not: String
  "All values not containing the given string."
  key_not_contains: String
  "All values not ending with the given string."
  key_not_ends_with: String
  "All values that are not contained in given list."
  key_not_in: [String!]
  "All values not starting with the given string."
  key_not_starts_with: String
  "All values starting with the given string."
  key_starts_with: String
  linkTarget: String
  "All values containing the given string."
  linkTarget_contains: String
  "All values ending with the given string."
  linkTarget_ends_with: String
  "All values greater than the given value."
  linkTarget_gt: String
  "All values greater than or equal the given value."
  linkTarget_gte: String
  "All values that are contained in given list."
  linkTarget_in: [String!]
  "All values less than the given value."
  linkTarget_lt: String
  "All values less than or equal the given value."
  linkTarget_lte: String
  "All values that are not equal to given value."
  linkTarget_not: String
  "All values not containing the given string."
  linkTarget_not_contains: String
  "All values not ending with the given string."
  linkTarget_not_ends_with: String
  "All values that are not contained in given list."
  linkTarget_not_in: [String!]
  "All values not starting with the given string."
  linkTarget_not_starts_with: String
  "All values starting with the given string."
  linkTarget_starts_with: String
  linkUrl: String
  "All values containing the given string."
  linkUrl_contains: String
  "All values ending with the given string."
  linkUrl_ends_with: String
  "All values greater than the given value."
  linkUrl_gt: String
  "All values greater than or equal the given value."
  linkUrl_gte: String
  "All values that are contained in given list."
  linkUrl_in: [String!]
  "All values less than the given value."
  linkUrl_lt: String
  "All values less than or equal the given value."
  linkUrl_lte: String
  "All values that are not equal to given value."
  linkUrl_not: String
  "All values not containing the given string."
  linkUrl_not_contains: String
  "All values not ending with the given string."
  linkUrl_not_ends_with: String
  "All values that are not contained in given list."
  linkUrl_not_in: [String!]
  "All values not starting with the given string."
  linkUrl_not_starts_with: String
  "All values starting with the given string."
  linkUrl_starts_with: String
  logoInstitutionEN_every: InstitutionWhereInput
  logoInstitutionEN_none: InstitutionWhereInput
  logoInstitutionEN_some: InstitutionWhereInput
  logoInstitutionFR_every: InstitutionWhereInput
  logoInstitutionFR_none: InstitutionWhereInput
  logoInstitutionFR_some: InstitutionWhereInput
  logoOrganisationEN_every: OrganisationWhereInput
  logoOrganisationEN_none: OrganisationWhereInput
  logoOrganisationEN_some: OrganisationWhereInput
  logoOrganisationFR_every: OrganisationWhereInput
  logoOrganisationFR_none: OrganisationWhereInput
  logoOrganisationFR_some: OrganisationWhereInput
  logoStudentSolutionEN_every: StudentSolutionWhereInput
  logoStudentSolutionEN_none: StudentSolutionWhereInput
  logoStudentSolutionEN_some: StudentSolutionWhereInput
  logoStudentSolutionFR_every: StudentSolutionWhereInput
  logoStudentSolutionFR_none: StudentSolutionWhereInput
  logoStudentSolutionFR_some: StudentSolutionWhereInput
  mimeType: String
  "All values containing the given string."
  mimeType_contains: String
  "All values ending with the given string."
  mimeType_ends_with: String
  "All values greater than the given value."
  mimeType_gt: String
  "All values greater than or equal the given value."
  mimeType_gte: String
  "All values that are contained in given list."
  mimeType_in: [String!]
  "All values less than the given value."
  mimeType_lt: String
  "All values less than or equal the given value."
  mimeType_lte: String
  "All values that are not equal to given value."
  mimeType_not: String
  "All values not containing the given string."
  mimeType_not_contains: String
  "All values not ending with the given string."
  mimeType_not_ends_with: String
  "All values that are not contained in given list."
  mimeType_not_in: [String!]
  "All values not starting with the given string."
  mimeType_not_starts_with: String
  "All values starting with the given string."
  mimeType_starts_with: String
  organisationOwner: OrganisationWhereInput
  serviceLogoOrganisationTFPSettingsEN_every: OrganisationTFPSettingsWhereInput
  serviceLogoOrganisationTFPSettingsEN_none: OrganisationTFPSettingsWhereInput
  serviceLogoOrganisationTFPSettingsEN_some: OrganisationTFPSettingsWhereInput
  serviceLogoOrganisationTFPSettingsFR_every: OrganisationTFPSettingsWhereInput
  serviceLogoOrganisationTFPSettingsFR_none: OrganisationTFPSettingsWhereInput
  serviceLogoOrganisationTFPSettingsFR_some: OrganisationTFPSettingsWhereInput
  serviceLogoTfpSettings_every: TfpSettingsWhereInput
  serviceLogoTfpSettings_none: TfpSettingsWhereInput
  serviceLogoTfpSettings_some: TfpSettingsWhereInput
  size: Float
  "All values greater than the given value."
  size_gt: Float
  "All values greater than or equal the given value."
  size_gte: Float
  "All values that are contained in given list."
  size_in: [Float!]
  "All values less than the given value."
  size_lt: Float
  "All values less than or equal the given value."
  size_lte: Float
  "All values that are not equal to given value."
  size_not: Float
  "All values that are not contained in given list."
  size_not_in: [Float!]
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  style: String
  "All values containing the given string."
  style_contains: String
  "All values ending with the given string."
  style_ends_with: String
  "All values greater than the given value."
  style_gt: String
  "All values greater than or equal the given value."
  style_gte: String
  "All values that are contained in given list."
  style_in: [String!]
  "All values less than the given value."
  style_lt: String
  "All values less than or equal the given value."
  style_lte: String
  "All values that are not equal to given value."
  style_not: String
  "All values not containing the given string."
  style_not_contains: String
  "All values not ending with the given string."
  style_not_ends_with: String
  "All values that are not contained in given list."
  style_not_in: [String!]
  "All values not starting with the given string."
  style_not_starts_with: String
  "All values starting with the given string."
  style_starts_with: String
  title: String
  "All values containing the given string."
  title_contains: String
  "All values ending with the given string."
  title_ends_with: String
  "All values greater than the given value."
  title_gt: String
  "All values greater than or equal the given value."
  title_gte: String
  "All values that are contained in given list."
  title_in: [String!]
  "All values less than the given value."
  title_lt: String
  "All values less than or equal the given value."
  title_lte: String
  "All values that are not equal to given value."
  title_not: String
  "All values not containing the given string."
  title_not_contains: String
  "All values not ending with the given string."
  title_not_ends_with: String
  "All values that are not contained in given list."
  title_not_in: [String!]
  "All values not starting with the given string."
  title_not_starts_with: String
  "All values starting with the given string."
  title_starts_with: String
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
  width: Float
  "All values greater than the given value."
  width_gt: Float
  "All values greater than or equal the given value."
  width_gte: Float
  "All values that are contained in given list."
  width_in: [Float!]
  "All values less than the given value."
  width_lt: Float
  "All values less than or equal the given value."
  width_lte: Float
  "All values that are not equal to given value."
  width_not: Float
  "All values that are not contained in given list."
  width_not_in: [Float!]
}

input AssetWhereUniqueInput {
  handle: String
  id: ID
}

input CampusCreateInput {
  contactsEN: CampusCreatecontactsENInput
  contactsFR: CampusCreatecontactsFRInput
  institution: InstitutionCreateOneWithoutCampusesInput
  labelEN: String
  labelFR: String
  name: String!
  status: Status
}

input CampusCreateManyWithoutInstitutionInput {
  connect: [CampusWhereUniqueInput!]
  create: [CampusCreateWithoutInstitutionInput!]
}

input CampusCreateWithoutInstitutionInput {
  contactsEN: CampusCreatecontactsENInput
  contactsFR: CampusCreatecontactsFRInput
  labelEN: String
  labelFR: String
  name: String!
  status: Status
}

input CampusCreatecontactsENInput {
  set: [Json!]
}

input CampusCreatecontactsFRInput {
  set: [Json!]
}

input CampusScalarWhereInput {
  "Logical AND on all given filters."
  AND: [CampusScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [CampusScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [CampusScalarWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input CampusSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [CampusSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [CampusSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [CampusSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: CampusWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input CampusUpdateInput {
  contactsEN: CampusUpdatecontactsENInput
  contactsFR: CampusUpdatecontactsFRInput
  institution: InstitutionUpdateOneWithoutCampusesInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input CampusUpdateManyDataInput {
  contactsEN: CampusUpdatecontactsENInput
  contactsFR: CampusUpdatecontactsFRInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input CampusUpdateManyMutationInput {
  contactsEN: CampusUpdatecontactsENInput
  contactsFR: CampusUpdatecontactsFRInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input CampusUpdateManyWithWhereNestedInput {
  data: CampusUpdateManyDataInput!
  where: CampusScalarWhereInput!
}

input CampusUpdateManyWithoutInstitutionInput {
  connect: [CampusWhereUniqueInput!]
  create: [CampusCreateWithoutInstitutionInput!]
  delete: [CampusWhereUniqueInput!]
  deleteMany: [CampusScalarWhereInput!]
  disconnect: [CampusWhereUniqueInput!]
  set: [CampusWhereUniqueInput!]
  update: [CampusUpdateWithWhereUniqueWithoutInstitutionInput!]
  updateMany: [CampusUpdateManyWithWhereNestedInput!]
  upsert: [CampusUpsertWithWhereUniqueWithoutInstitutionInput!]
}

input CampusUpdateWithWhereUniqueWithoutInstitutionInput {
  data: CampusUpdateWithoutInstitutionDataInput!
  where: CampusWhereUniqueInput!
}

input CampusUpdateWithoutInstitutionDataInput {
  contactsEN: CampusUpdatecontactsENInput
  contactsFR: CampusUpdatecontactsFRInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input CampusUpdatecontactsENInput {
  set: [Json!]
}

input CampusUpdatecontactsFRInput {
  set: [Json!]
}

input CampusUpsertWithWhereUniqueWithoutInstitutionInput {
  create: CampusCreateWithoutInstitutionInput!
  update: CampusUpdateWithoutInstitutionDataInput!
  where: CampusWhereUniqueInput!
}

input CampusWhereInput {
  "Logical AND on all given filters."
  AND: [CampusWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [CampusWhereInput!]
  "Logical OR on all given filters."
  OR: [CampusWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input CampusWhereUniqueInput {
  id: ID
}

input DocumentOutputInput {
  """
  Transforms a document into a desired file type.
  See this matrix for format support:

  PDF:\tjpg, odp, ods, odt, png, svg, txt, and webp
  DOC:\tdocx, html, jpg, odt, pdf, png, svg, txt, and webp
  DOCX:\tdoc, html, jpg, odt, pdf, png, svg, txt, and webp
  ODT:\tdoc, docx, html, jpg, pdf, png, svg, txt, and webp
  XLS:\tjpg, pdf, ods, png, svg, xlsx, and webp
  XLSX:\tjpg, pdf, ods, png, svg, xls, and webp
  ODS:\tjpg, pdf, png, xls, svg, xlsx, and webp
  PPT:\tjpg, odp, pdf, png, svg, pptx, and webp
  PPTX:\tjpg, odp, pdf, png, svg, ppt, and webp
  ODP:\tjpg, pdf, png, ppt, svg, pptx, and webp
  BMP:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  GIF:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  JPG:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  PNG:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  WEBP:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  TIFF:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  AI:\t    jpg, odp, ods, odt, pdf, png, svg, and webp
  PSD:\tjpg, odp, ods, odt, pdf, png, svg, and webp
  SVG:\tjpg, odp, ods, odt, pdf, png, and webp
  HTML:\tjpg, odt, pdf, svg, txt, and webp
  TXT:\tjpg, html, odt, pdf, svg, and webp
  """
  format: DocumentFileTypes
}

"Transformations for Documents"
input DocumentTransformationInput {
  "Changes the output for the file."
  output: DocumentOutputInput
}

input ImageResizeInput {
  "The default value for the fit parameter is fit:clip."
  fit: ImageFit
  "The height in pixels to resize the image to. The value must be an integer from 1 to 10000."
  height: Int
  "The width in pixels to resize the image to. The value must be an integer from 1 to 10000."
  width: Int
}

"Transformations for Images"
input ImageTransformationInput {
  "Resizes the image"
  resize: ImageResizeInput
}

input InstitutionChatbotSettingsCreateInput {
  backFromCategoryTextEN: RichTextAST
  backFromCategoryTextFR: RichTextAST
  backFromSolutionTextEN: RichTextAST
  backFromSolutionTextFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  institution: InstitutionCreateOneWithoutInstitutionChatbotSettingsInput
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichTextAST
  selectCampusTextFR: RichTextAST
  selectCategoryTextEN: RichTextAST
  selectCategoryTextFR: RichTextAST
  selectInstitutionTextEN: RichTextAST
  selectInstitutionTextFR: RichTextAST
  selectStudentSolutionTextEN: RichTextAST
  selectStudentSolutionTextFR: RichTextAST
  status: Status
  studentSolutionsIntroductionTextEN: RichTextAST
  studentSolutionsIntroductionTextFR: RichTextAST
}

input InstitutionChatbotSettingsCreateOneWithoutInstitutionInput {
  connect: InstitutionChatbotSettingsWhereUniqueInput
  create: InstitutionChatbotSettingsCreateWithoutInstitutionInput
}

input InstitutionChatbotSettingsCreateWithoutInstitutionInput {
  backFromCategoryTextEN: RichTextAST
  backFromCategoryTextFR: RichTextAST
  backFromSolutionTextEN: RichTextAST
  backFromSolutionTextFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichTextAST
  selectCampusTextFR: RichTextAST
  selectCategoryTextEN: RichTextAST
  selectCategoryTextFR: RichTextAST
  selectInstitutionTextEN: RichTextAST
  selectInstitutionTextFR: RichTextAST
  selectStudentSolutionTextEN: RichTextAST
  selectStudentSolutionTextFR: RichTextAST
  status: Status
  studentSolutionsIntroductionTextEN: RichTextAST
  studentSolutionsIntroductionTextFR: RichTextAST
}

input InstitutionChatbotSettingsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionChatbotSettingsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionChatbotSettingsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionChatbotSettingsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: InstitutionChatbotSettingsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input InstitutionChatbotSettingsUpdateInput {
  backFromCategoryTextEN: RichTextAST
  backFromCategoryTextFR: RichTextAST
  backFromSolutionTextEN: RichTextAST
  backFromSolutionTextFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  institution: InstitutionUpdateOneWithoutInstitutionChatbotSettingsInput
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichTextAST
  selectCampusTextFR: RichTextAST
  selectCategoryTextEN: RichTextAST
  selectCategoryTextFR: RichTextAST
  selectInstitutionTextEN: RichTextAST
  selectInstitutionTextFR: RichTextAST
  selectStudentSolutionTextEN: RichTextAST
  selectStudentSolutionTextFR: RichTextAST
  status: Status
  studentSolutionsIntroductionTextEN: RichTextAST
  studentSolutionsIntroductionTextFR: RichTextAST
}

input InstitutionChatbotSettingsUpdateManyMutationInput {
  backFromCategoryTextEN: RichTextAST
  backFromCategoryTextFR: RichTextAST
  backFromSolutionTextEN: RichTextAST
  backFromSolutionTextFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichTextAST
  selectCampusTextFR: RichTextAST
  selectCategoryTextEN: RichTextAST
  selectCategoryTextFR: RichTextAST
  selectInstitutionTextEN: RichTextAST
  selectInstitutionTextFR: RichTextAST
  selectStudentSolutionTextEN: RichTextAST
  selectStudentSolutionTextFR: RichTextAST
  status: Status
  studentSolutionsIntroductionTextEN: RichTextAST
  studentSolutionsIntroductionTextFR: RichTextAST
}

input InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput {
  connect: InstitutionChatbotSettingsWhereUniqueInput
  create: InstitutionChatbotSettingsCreateWithoutInstitutionInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionChatbotSettingsUpdateWithoutInstitutionDataInput
  upsert: InstitutionChatbotSettingsUpsertWithoutInstitutionInput
}

input InstitutionChatbotSettingsUpdateWithoutInstitutionDataInput {
  backFromCategoryTextEN: RichTextAST
  backFromCategoryTextFR: RichTextAST
  backFromSolutionTextEN: RichTextAST
  backFromSolutionTextFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  labelEN: String
  labelFR: String
  selectCampusTextEN: RichTextAST
  selectCampusTextFR: RichTextAST
  selectCategoryTextEN: RichTextAST
  selectCategoryTextFR: RichTextAST
  selectInstitutionTextEN: RichTextAST
  selectInstitutionTextFR: RichTextAST
  selectStudentSolutionTextEN: RichTextAST
  selectStudentSolutionTextFR: RichTextAST
  status: Status
  studentSolutionsIntroductionTextEN: RichTextAST
  studentSolutionsIntroductionTextFR: RichTextAST
}

input InstitutionChatbotSettingsUpsertWithoutInstitutionInput {
  create: InstitutionChatbotSettingsCreateWithoutInstitutionInput!
  update: InstitutionChatbotSettingsUpdateWithoutInstitutionDataInput!
}

input InstitutionChatbotSettingsWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionChatbotSettingsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionChatbotSettingsWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionChatbotSettingsWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input InstitutionChatbotSettingsWhereUniqueInput {
  id: ID
}

input InstitutionCreateInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateManyWithoutLogoENInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutLogoENInput!]
}

input InstitutionCreateManyWithoutLogoFRInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutLogoFRInput!]
}

input InstitutionCreateManyWithoutOrganisationInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutOrganisationInput!]
}

input InstitutionCreateOneWithoutCampusesInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutCampusesInput
}

input InstitutionCreateOneWithoutInstitutionChatbotSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionChatbotSettingsInput
}

input InstitutionCreateOneWithoutInstitutionSLSSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionSLSSettingsInput
}

input InstitutionCreateOneWithoutInstitutionTFPSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionTFPSettingsInput
}

input InstitutionCreateOneWithoutStudentSolutionCategoriesInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutStudentSolutionCategoriesInput
}

input InstitutionCreateOneWithoutThemeInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutThemeInput
}

input InstitutionCreateWithoutCampusesInput {
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutInstitutionChatbotSettingsInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutInstitutionSLSSettingsInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutInstitutionTFPSettingsInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutLogoENInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutLogoFRInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutOrganisationInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutStudentSolutionCategoriesInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  theme: ThemeCreateOneWithoutInstitutionInput
}

input InstitutionCreateWithoutThemeInput {
  campuses: CampusCreateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsCreateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsCreateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsCreateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetCreateOneWithoutLogoInstitutionENInput
  logoFR: AssetCreateOneWithoutLogoInstitutionFRInput
  name: String!
  organisation: OrganisationCreateOneWithoutInstitutionsInput
  path: String!
  status: Status
  studentSolutionCategories: StudentSolutionCategoryCreateManyWithoutInstitutionInput
}

input InstitutionSLSSettingsCreateInput {
  borrowingAssistanceDescriptionEN: RichTextAST
  borrowingAssistanceDescriptionFR: RichTextAST
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  institution: InstitutionCreateOneWithoutInstitutionSLSSettingsInput
  status: Status
}

input InstitutionSLSSettingsCreateOneWithoutInstitutionInput {
  connect: InstitutionSLSSettingsWhereUniqueInput
  create: InstitutionSLSSettingsCreateWithoutInstitutionInput
}

input InstitutionSLSSettingsCreateWithoutInstitutionInput {
  borrowingAssistanceDescriptionEN: RichTextAST
  borrowingAssistanceDescriptionFR: RichTextAST
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  status: Status
}

input InstitutionSLSSettingsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionSLSSettingsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionSLSSettingsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionSLSSettingsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: InstitutionSLSSettingsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input InstitutionSLSSettingsUpdateInput {
  borrowingAssistanceDescriptionEN: RichTextAST
  borrowingAssistanceDescriptionFR: RichTextAST
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  institution: InstitutionUpdateOneWithoutInstitutionSLSSettingsInput
  status: Status
}

input InstitutionSLSSettingsUpdateManyMutationInput {
  borrowingAssistanceDescriptionEN: RichTextAST
  borrowingAssistanceDescriptionFR: RichTextAST
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  status: Status
}

input InstitutionSLSSettingsUpdateOneWithoutInstitutionInput {
  connect: InstitutionSLSSettingsWhereUniqueInput
  create: InstitutionSLSSettingsCreateWithoutInstitutionInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionSLSSettingsUpdateWithoutInstitutionDataInput
  upsert: InstitutionSLSSettingsUpsertWithoutInstitutionInput
}

input InstitutionSLSSettingsUpdateWithoutInstitutionDataInput {
  borrowingAssistanceDescriptionEN: RichTextAST
  borrowingAssistanceDescriptionFR: RichTextAST
  borrowingAssistanceTitleEN: String
  borrowingAssistanceTitleFR: String
  campusFieldLabelEN: String
  campusFieldLabelFR: String
  status: Status
}

input InstitutionSLSSettingsUpsertWithoutInstitutionInput {
  create: InstitutionSLSSettingsCreateWithoutInstitutionInput!
  update: InstitutionSLSSettingsUpdateWithoutInstitutionDataInput!
}

input InstitutionSLSSettingsWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionSLSSettingsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionSLSSettingsWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionSLSSettingsWhereInput!]
  borrowingAssistanceTitleEN: String
  "All values containing the given string."
  borrowingAssistanceTitleEN_contains: String
  "All values ending with the given string."
  borrowingAssistanceTitleEN_ends_with: String
  "All values greater than the given value."
  borrowingAssistanceTitleEN_gt: String
  "All values greater than or equal the given value."
  borrowingAssistanceTitleEN_gte: String
  "All values that are contained in given list."
  borrowingAssistanceTitleEN_in: [String!]
  "All values less than the given value."
  borrowingAssistanceTitleEN_lt: String
  "All values less than or equal the given value."
  borrowingAssistanceTitleEN_lte: String
  "All values that are not equal to given value."
  borrowingAssistanceTitleEN_not: String
  "All values not containing the given string."
  borrowingAssistanceTitleEN_not_contains: String
  "All values not ending with the given string."
  borrowingAssistanceTitleEN_not_ends_with: String
  "All values that are not contained in given list."
  borrowingAssistanceTitleEN_not_in: [String!]
  "All values not starting with the given string."
  borrowingAssistanceTitleEN_not_starts_with: String
  "All values starting with the given string."
  borrowingAssistanceTitleEN_starts_with: String
  borrowingAssistanceTitleFR: String
  "All values containing the given string."
  borrowingAssistanceTitleFR_contains: String
  "All values ending with the given string."
  borrowingAssistanceTitleFR_ends_with: String
  "All values greater than the given value."
  borrowingAssistanceTitleFR_gt: String
  "All values greater than or equal the given value."
  borrowingAssistanceTitleFR_gte: String
  "All values that are contained in given list."
  borrowingAssistanceTitleFR_in: [String!]
  "All values less than the given value."
  borrowingAssistanceTitleFR_lt: String
  "All values less than or equal the given value."
  borrowingAssistanceTitleFR_lte: String
  "All values that are not equal to given value."
  borrowingAssistanceTitleFR_not: String
  "All values not containing the given string."
  borrowingAssistanceTitleFR_not_contains: String
  "All values not ending with the given string."
  borrowingAssistanceTitleFR_not_ends_with: String
  "All values that are not contained in given list."
  borrowingAssistanceTitleFR_not_in: [String!]
  "All values not starting with the given string."
  borrowingAssistanceTitleFR_not_starts_with: String
  "All values starting with the given string."
  borrowingAssistanceTitleFR_starts_with: String
  campusFieldLabelEN: String
  "All values containing the given string."
  campusFieldLabelEN_contains: String
  "All values ending with the given string."
  campusFieldLabelEN_ends_with: String
  "All values greater than the given value."
  campusFieldLabelEN_gt: String
  "All values greater than or equal the given value."
  campusFieldLabelEN_gte: String
  "All values that are contained in given list."
  campusFieldLabelEN_in: [String!]
  "All values less than the given value."
  campusFieldLabelEN_lt: String
  "All values less than or equal the given value."
  campusFieldLabelEN_lte: String
  "All values that are not equal to given value."
  campusFieldLabelEN_not: String
  "All values not containing the given string."
  campusFieldLabelEN_not_contains: String
  "All values not ending with the given string."
  campusFieldLabelEN_not_ends_with: String
  "All values that are not contained in given list."
  campusFieldLabelEN_not_in: [String!]
  "All values not starting with the given string."
  campusFieldLabelEN_not_starts_with: String
  "All values starting with the given string."
  campusFieldLabelEN_starts_with: String
  campusFieldLabelFR: String
  "All values containing the given string."
  campusFieldLabelFR_contains: String
  "All values ending with the given string."
  campusFieldLabelFR_ends_with: String
  "All values greater than the given value."
  campusFieldLabelFR_gt: String
  "All values greater than or equal the given value."
  campusFieldLabelFR_gte: String
  "All values that are contained in given list."
  campusFieldLabelFR_in: [String!]
  "All values less than the given value."
  campusFieldLabelFR_lt: String
  "All values less than or equal the given value."
  campusFieldLabelFR_lte: String
  "All values that are not equal to given value."
  campusFieldLabelFR_not: String
  "All values not containing the given string."
  campusFieldLabelFR_not_contains: String
  "All values not ending with the given string."
  campusFieldLabelFR_not_ends_with: String
  "All values that are not contained in given list."
  campusFieldLabelFR_not_in: [String!]
  "All values not starting with the given string."
  campusFieldLabelFR_not_starts_with: String
  "All values starting with the given string."
  campusFieldLabelFR_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input InstitutionSLSSettingsWhereUniqueInput {
  id: ID
}

input InstitutionScalarWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionScalarWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  labelShortEN: String
  "All values containing the given string."
  labelShortEN_contains: String
  "All values ending with the given string."
  labelShortEN_ends_with: String
  "All values greater than the given value."
  labelShortEN_gt: String
  "All values greater than or equal the given value."
  labelShortEN_gte: String
  "All values that are contained in given list."
  labelShortEN_in: [String!]
  "All values less than the given value."
  labelShortEN_lt: String
  "All values less than or equal the given value."
  labelShortEN_lte: String
  "All values that are not equal to given value."
  labelShortEN_not: String
  "All values not containing the given string."
  labelShortEN_not_contains: String
  "All values not ending with the given string."
  labelShortEN_not_ends_with: String
  "All values that are not contained in given list."
  labelShortEN_not_in: [String!]
  "All values not starting with the given string."
  labelShortEN_not_starts_with: String
  "All values starting with the given string."
  labelShortEN_starts_with: String
  labelShortFR: String
  "All values containing the given string."
  labelShortFR_contains: String
  "All values ending with the given string."
  labelShortFR_ends_with: String
  "All values greater than the given value."
  labelShortFR_gt: String
  "All values greater than or equal the given value."
  labelShortFR_gte: String
  "All values that are contained in given list."
  labelShortFR_in: [String!]
  "All values less than the given value."
  labelShortFR_lt: String
  "All values less than or equal the given value."
  labelShortFR_lte: String
  "All values that are not equal to given value."
  labelShortFR_not: String
  "All values not containing the given string."
  labelShortFR_not_contains: String
  "All values not ending with the given string."
  labelShortFR_not_ends_with: String
  "All values that are not contained in given list."
  labelShortFR_not_in: [String!]
  "All values not starting with the given string."
  labelShortFR_not_starts_with: String
  "All values starting with the given string."
  labelShortFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  path: String
  "All values containing the given string."
  path_contains: String
  "All values ending with the given string."
  path_ends_with: String
  "All values greater than the given value."
  path_gt: String
  "All values greater than or equal the given value."
  path_gte: String
  "All values that are contained in given list."
  path_in: [String!]
  "All values less than the given value."
  path_lt: String
  "All values less than or equal the given value."
  path_lte: String
  "All values that are not equal to given value."
  path_not: String
  "All values not containing the given string."
  path_not_contains: String
  "All values not ending with the given string."
  path_not_ends_with: String
  "All values that are not contained in given list."
  path_not_in: [String!]
  "All values not starting with the given string."
  path_not_starts_with: String
  "All values starting with the given string."
  path_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input InstitutionSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: InstitutionWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input InstitutionTFPSettingsCreateInput {
  institution: InstitutionCreateOneWithoutInstitutionTFPSettingsInput
  landingWelcomeTextEN: RichTextAST
  landingWelcomeTextFR: RichTextAST
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status
}

input InstitutionTFPSettingsCreateOneWithoutInstitutionInput {
  connect: InstitutionTFPSettingsWhereUniqueInput
  create: InstitutionTFPSettingsCreateWithoutInstitutionInput
}

input InstitutionTFPSettingsCreateWithoutInstitutionInput {
  landingWelcomeTextEN: RichTextAST
  landingWelcomeTextFR: RichTextAST
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status
}

input InstitutionTFPSettingsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionTFPSettingsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionTFPSettingsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionTFPSettingsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: InstitutionTFPSettingsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input InstitutionTFPSettingsUpdateInput {
  institution: InstitutionUpdateOneWithoutInstitutionTFPSettingsInput
  landingWelcomeTextEN: RichTextAST
  landingWelcomeTextFR: RichTextAST
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status
}

input InstitutionTFPSettingsUpdateManyMutationInput {
  landingWelcomeTextEN: RichTextAST
  landingWelcomeTextFR: RichTextAST
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status
}

input InstitutionTFPSettingsUpdateOneWithoutInstitutionInput {
  connect: InstitutionTFPSettingsWhereUniqueInput
  create: InstitutionTFPSettingsCreateWithoutInstitutionInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionTFPSettingsUpdateWithoutInstitutionDataInput
  upsert: InstitutionTFPSettingsUpsertWithoutInstitutionInput
}

input InstitutionTFPSettingsUpdateWithoutInstitutionDataInput {
  landingWelcomeTextEN: RichTextAST
  landingWelcomeTextFR: RichTextAST
  landingWelcomeTitleEN: String
  landingWelcomeTitleFR: String
  status: Status
}

input InstitutionTFPSettingsUpsertWithoutInstitutionInput {
  create: InstitutionTFPSettingsCreateWithoutInstitutionInput!
  update: InstitutionTFPSettingsUpdateWithoutInstitutionDataInput!
}

input InstitutionTFPSettingsWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionTFPSettingsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionTFPSettingsWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionTFPSettingsWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  landingWelcomeTitleEN: String
  "All values containing the given string."
  landingWelcomeTitleEN_contains: String
  "All values ending with the given string."
  landingWelcomeTitleEN_ends_with: String
  "All values greater than the given value."
  landingWelcomeTitleEN_gt: String
  "All values greater than or equal the given value."
  landingWelcomeTitleEN_gte: String
  "All values that are contained in given list."
  landingWelcomeTitleEN_in: [String!]
  "All values less than the given value."
  landingWelcomeTitleEN_lt: String
  "All values less than or equal the given value."
  landingWelcomeTitleEN_lte: String
  "All values that are not equal to given value."
  landingWelcomeTitleEN_not: String
  "All values not containing the given string."
  landingWelcomeTitleEN_not_contains: String
  "All values not ending with the given string."
  landingWelcomeTitleEN_not_ends_with: String
  "All values that are not contained in given list."
  landingWelcomeTitleEN_not_in: [String!]
  "All values not starting with the given string."
  landingWelcomeTitleEN_not_starts_with: String
  "All values starting with the given string."
  landingWelcomeTitleEN_starts_with: String
  landingWelcomeTitleFR: String
  "All values containing the given string."
  landingWelcomeTitleFR_contains: String
  "All values ending with the given string."
  landingWelcomeTitleFR_ends_with: String
  "All values greater than the given value."
  landingWelcomeTitleFR_gt: String
  "All values greater than or equal the given value."
  landingWelcomeTitleFR_gte: String
  "All values that are contained in given list."
  landingWelcomeTitleFR_in: [String!]
  "All values less than the given value."
  landingWelcomeTitleFR_lt: String
  "All values less than or equal the given value."
  landingWelcomeTitleFR_lte: String
  "All values that are not equal to given value."
  landingWelcomeTitleFR_not: String
  "All values not containing the given string."
  landingWelcomeTitleFR_not_contains: String
  "All values not ending with the given string."
  landingWelcomeTitleFR_not_ends_with: String
  "All values that are not contained in given list."
  landingWelcomeTitleFR_not_in: [String!]
  "All values not starting with the given string."
  landingWelcomeTitleFR_not_starts_with: String
  "All values starting with the given string."
  landingWelcomeTitleFR_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input InstitutionTFPSettingsWhereUniqueInput {
  id: ID
}

input InstitutionUpdateInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateManyDataInput {
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  name: String
  path: String
  status: Status
}

input InstitutionUpdateManyMutationInput {
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  name: String
  path: String
  status: Status
}

input InstitutionUpdateManyWithWhereNestedInput {
  data: InstitutionUpdateManyDataInput!
  where: InstitutionScalarWhereInput!
}

input InstitutionUpdateManyWithoutLogoENInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutLogoENInput!]
  delete: [InstitutionWhereUniqueInput!]
  deleteMany: [InstitutionScalarWhereInput!]
  disconnect: [InstitutionWhereUniqueInput!]
  set: [InstitutionWhereUniqueInput!]
  update: [InstitutionUpdateWithWhereUniqueWithoutLogoENInput!]
  updateMany: [InstitutionUpdateManyWithWhereNestedInput!]
  upsert: [InstitutionUpsertWithWhereUniqueWithoutLogoENInput!]
}

input InstitutionUpdateManyWithoutLogoFRInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutLogoFRInput!]
  delete: [InstitutionWhereUniqueInput!]
  deleteMany: [InstitutionScalarWhereInput!]
  disconnect: [InstitutionWhereUniqueInput!]
  set: [InstitutionWhereUniqueInput!]
  update: [InstitutionUpdateWithWhereUniqueWithoutLogoFRInput!]
  updateMany: [InstitutionUpdateManyWithWhereNestedInput!]
  upsert: [InstitutionUpsertWithWhereUniqueWithoutLogoFRInput!]
}

input InstitutionUpdateManyWithoutOrganisationInput {
  connect: [InstitutionWhereUniqueInput!]
  create: [InstitutionCreateWithoutOrganisationInput!]
  delete: [InstitutionWhereUniqueInput!]
  deleteMany: [InstitutionScalarWhereInput!]
  disconnect: [InstitutionWhereUniqueInput!]
  set: [InstitutionWhereUniqueInput!]
  update: [InstitutionUpdateWithWhereUniqueWithoutOrganisationInput!]
  updateMany: [InstitutionUpdateManyWithWhereNestedInput!]
  upsert: [InstitutionUpsertWithWhereUniqueWithoutOrganisationInput!]
}

input InstitutionUpdateOneWithoutCampusesInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutCampusesInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutCampusesDataInput
  upsert: InstitutionUpsertWithoutCampusesInput
}

input InstitutionUpdateOneWithoutInstitutionChatbotSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionChatbotSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutInstitutionChatbotSettingsDataInput
  upsert: InstitutionUpsertWithoutInstitutionChatbotSettingsInput
}

input InstitutionUpdateOneWithoutInstitutionSLSSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionSLSSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutInstitutionSLSSettingsDataInput
  upsert: InstitutionUpsertWithoutInstitutionSLSSettingsInput
}

input InstitutionUpdateOneWithoutInstitutionTFPSettingsInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutInstitutionTFPSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutInstitutionTFPSettingsDataInput
  upsert: InstitutionUpsertWithoutInstitutionTFPSettingsInput
}

input InstitutionUpdateOneWithoutStudentSolutionCategoriesInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutStudentSolutionCategoriesInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutStudentSolutionCategoriesDataInput
  upsert: InstitutionUpsertWithoutStudentSolutionCategoriesInput
}

input InstitutionUpdateOneWithoutThemeInput {
  connect: InstitutionWhereUniqueInput
  create: InstitutionCreateWithoutThemeInput
  delete: Boolean
  disconnect: Boolean
  update: InstitutionUpdateWithoutThemeDataInput
  upsert: InstitutionUpsertWithoutThemeInput
}

input InstitutionUpdateWithWhereUniqueWithoutLogoENInput {
  data: InstitutionUpdateWithoutLogoENDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpdateWithWhereUniqueWithoutLogoFRInput {
  data: InstitutionUpdateWithoutLogoFRDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpdateWithWhereUniqueWithoutOrganisationInput {
  data: InstitutionUpdateWithoutOrganisationDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpdateWithoutCampusesDataInput {
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutInstitutionChatbotSettingsDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutInstitutionSLSSettingsDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutInstitutionTFPSettingsDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutLogoENDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutLogoFRDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutOrganisationDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutStudentSolutionCategoriesDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  theme: ThemeUpdateOneWithoutInstitutionInput
}

input InstitutionUpdateWithoutThemeDataInput {
  campuses: CampusUpdateManyWithoutInstitutionInput
  institutionChatbotSettings: InstitutionChatbotSettingsUpdateOneWithoutInstitutionInput
  institutionSLSSettings: InstitutionSLSSettingsUpdateOneWithoutInstitutionInput
  institutionTFPSettings: InstitutionTFPSettingsUpdateOneWithoutInstitutionInput
  labelEN: String
  labelFR: String
  labelShortEN: String
  labelShortFR: String
  logoEN: AssetUpdateOneWithoutLogoInstitutionENInput
  logoFR: AssetUpdateOneWithoutLogoInstitutionFRInput
  name: String
  organisation: OrganisationUpdateOneWithoutInstitutionsInput
  path: String
  status: Status
  studentSolutionCategories: StudentSolutionCategoryUpdateManyWithoutInstitutionInput
}

input InstitutionUpsertWithWhereUniqueWithoutLogoENInput {
  create: InstitutionCreateWithoutLogoENInput!
  update: InstitutionUpdateWithoutLogoENDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpsertWithWhereUniqueWithoutLogoFRInput {
  create: InstitutionCreateWithoutLogoFRInput!
  update: InstitutionUpdateWithoutLogoFRDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpsertWithWhereUniqueWithoutOrganisationInput {
  create: InstitutionCreateWithoutOrganisationInput!
  update: InstitutionUpdateWithoutOrganisationDataInput!
  where: InstitutionWhereUniqueInput!
}

input InstitutionUpsertWithoutCampusesInput {
  create: InstitutionCreateWithoutCampusesInput!
  update: InstitutionUpdateWithoutCampusesDataInput!
}

input InstitutionUpsertWithoutInstitutionChatbotSettingsInput {
  create: InstitutionCreateWithoutInstitutionChatbotSettingsInput!
  update: InstitutionUpdateWithoutInstitutionChatbotSettingsDataInput!
}

input InstitutionUpsertWithoutInstitutionSLSSettingsInput {
  create: InstitutionCreateWithoutInstitutionSLSSettingsInput!
  update: InstitutionUpdateWithoutInstitutionSLSSettingsDataInput!
}

input InstitutionUpsertWithoutInstitutionTFPSettingsInput {
  create: InstitutionCreateWithoutInstitutionTFPSettingsInput!
  update: InstitutionUpdateWithoutInstitutionTFPSettingsDataInput!
}

input InstitutionUpsertWithoutStudentSolutionCategoriesInput {
  create: InstitutionCreateWithoutStudentSolutionCategoriesInput!
  update: InstitutionUpdateWithoutStudentSolutionCategoriesDataInput!
}

input InstitutionUpsertWithoutThemeInput {
  create: InstitutionCreateWithoutThemeInput!
  update: InstitutionUpdateWithoutThemeDataInput!
}

input InstitutionWhereInput {
  "Logical AND on all given filters."
  AND: [InstitutionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [InstitutionWhereInput!]
  "Logical OR on all given filters."
  OR: [InstitutionWhereInput!]
  campuses_every: CampusWhereInput
  campuses_none: CampusWhereInput
  campuses_some: CampusWhereInput
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institutionChatbotSettings: InstitutionChatbotSettingsWhereInput
  institutionSLSSettings: InstitutionSLSSettingsWhereInput
  institutionTFPSettings: InstitutionTFPSettingsWhereInput
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  labelShortEN: String
  "All values containing the given string."
  labelShortEN_contains: String
  "All values ending with the given string."
  labelShortEN_ends_with: String
  "All values greater than the given value."
  labelShortEN_gt: String
  "All values greater than or equal the given value."
  labelShortEN_gte: String
  "All values that are contained in given list."
  labelShortEN_in: [String!]
  "All values less than the given value."
  labelShortEN_lt: String
  "All values less than or equal the given value."
  labelShortEN_lte: String
  "All values that are not equal to given value."
  labelShortEN_not: String
  "All values not containing the given string."
  labelShortEN_not_contains: String
  "All values not ending with the given string."
  labelShortEN_not_ends_with: String
  "All values that are not contained in given list."
  labelShortEN_not_in: [String!]
  "All values not starting with the given string."
  labelShortEN_not_starts_with: String
  "All values starting with the given string."
  labelShortEN_starts_with: String
  labelShortFR: String
  "All values containing the given string."
  labelShortFR_contains: String
  "All values ending with the given string."
  labelShortFR_ends_with: String
  "All values greater than the given value."
  labelShortFR_gt: String
  "All values greater than or equal the given value."
  labelShortFR_gte: String
  "All values that are contained in given list."
  labelShortFR_in: [String!]
  "All values less than the given value."
  labelShortFR_lt: String
  "All values less than or equal the given value."
  labelShortFR_lte: String
  "All values that are not equal to given value."
  labelShortFR_not: String
  "All values not containing the given string."
  labelShortFR_not_contains: String
  "All values not ending with the given string."
  labelShortFR_not_ends_with: String
  "All values that are not contained in given list."
  labelShortFR_not_in: [String!]
  "All values not starting with the given string."
  labelShortFR_not_starts_with: String
  "All values starting with the given string."
  labelShortFR_starts_with: String
  logoEN: AssetWhereInput
  logoFR: AssetWhereInput
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  organisation: OrganisationWhereInput
  path: String
  "All values containing the given string."
  path_contains: String
  "All values ending with the given string."
  path_ends_with: String
  "All values greater than the given value."
  path_gt: String
  "All values greater than or equal the given value."
  path_gte: String
  "All values that are contained in given list."
  path_in: [String!]
  "All values less than the given value."
  path_lt: String
  "All values less than or equal the given value."
  path_lte: String
  "All values that are not equal to given value."
  path_not: String
  "All values not containing the given string."
  path_not_contains: String
  "All values not ending with the given string."
  path_not_ends_with: String
  "All values that are not contained in given list."
  path_not_in: [String!]
  "All values not starting with the given string."
  path_not_starts_with: String
  "All values starting with the given string."
  path_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  studentSolutionCategories_every: StudentSolutionCategoryWhereInput
  studentSolutionCategories_none: StudentSolutionCategoryWhereInput
  studentSolutionCategories_some: StudentSolutionCategoryWhereInput
  theme: ThemeWhereInput
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input InstitutionWhereUniqueInput {
  id: ID
  name: String
  path: String
}

input OrganisationCreateInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateManyWithoutLogoENInput {
  connect: [OrganisationWhereUniqueInput!]
  create: [OrganisationCreateWithoutLogoENInput!]
}

input OrganisationCreateManyWithoutLogoFRInput {
  connect: [OrganisationWhereUniqueInput!]
  create: [OrganisationCreateWithoutLogoFRInput!]
}

input OrganisationCreateOneWithoutInstitutionsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutInstitutionsInput
}

input OrganisationCreateOneWithoutOrganisationTFPSettingsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutOrganisationTFPSettingsInput
}

input OrganisationCreateOneWithoutOwnedAssetsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutOwnedAssetsInput
}

input OrganisationCreateOneWithoutStudentSolutionsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutStudentSolutionsInput
}

input OrganisationCreateOneWithoutThemeInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutThemeInput
}

input OrganisationCreateWithoutInstitutionsInput {
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutLogoENInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutLogoFRInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutOrganisationTFPSettingsInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutOwnedAssetsInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutStudentSolutionsInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  theme: ThemeCreateOneWithoutOrganisationInput
}

input OrganisationCreateWithoutThemeInput {
  institutions: InstitutionCreateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetCreateOneWithoutLogoOrganisationENInput
  logoFR: AssetCreateOneWithoutLogoOrganisationFRInput
  name: String!
  organisationTFPSettings: OrganisationTFPSettingsCreateOneWithoutOrganisationInput
  ownedAssets: AssetCreateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutOrganisationOwnerInput
}

input OrganisationScalarWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationScalarWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input OrganisationSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: OrganisationWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input OrganisationTFPSettingsCreateInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationCreateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsCreateManyWithoutFaviconInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutFaviconInput!]
}

input OrganisationTFPSettingsCreateManyWithoutServiceLogoENInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutServiceLogoENInput!]
}

input OrganisationTFPSettingsCreateManyWithoutServiceLogoFRInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutServiceLogoFRInput!]
}

input OrganisationTFPSettingsCreateManyWithoutSlsReleaseInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutSlsReleaseInput!]
}

input OrganisationTFPSettingsCreateOneWithoutOrganisationInput {
  connect: OrganisationTFPSettingsWhereUniqueInput
  create: OrganisationTFPSettingsCreateWithoutOrganisationInput
}

input OrganisationTFPSettingsCreateWithoutFaviconInput {
  copyrightEN: String
  copyrightFR: String
  organisation: OrganisationCreateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsCreateWithoutOrganisationInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsCreateWithoutServiceLogoENInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationCreateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoFR: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsCreateWithoutServiceLogoFRInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationCreateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  slsRelease: SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsCreateWithoutSlsReleaseInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetCreateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationCreateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetCreateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  status: Status
}

input OrganisationTFPSettingsScalarWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationTFPSettingsScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationTFPSettingsScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationTFPSettingsScalarWhereInput!]
  copyrightEN: String
  "All values containing the given string."
  copyrightEN_contains: String
  "All values ending with the given string."
  copyrightEN_ends_with: String
  "All values greater than the given value."
  copyrightEN_gt: String
  "All values greater than or equal the given value."
  copyrightEN_gte: String
  "All values that are contained in given list."
  copyrightEN_in: [String!]
  "All values less than the given value."
  copyrightEN_lt: String
  "All values less than or equal the given value."
  copyrightEN_lte: String
  "All values that are not equal to given value."
  copyrightEN_not: String
  "All values not containing the given string."
  copyrightEN_not_contains: String
  "All values not ending with the given string."
  copyrightEN_not_ends_with: String
  "All values that are not contained in given list."
  copyrightEN_not_in: [String!]
  "All values not starting with the given string."
  copyrightEN_not_starts_with: String
  "All values starting with the given string."
  copyrightEN_starts_with: String
  copyrightFR: String
  "All values containing the given string."
  copyrightFR_contains: String
  "All values ending with the given string."
  copyrightFR_ends_with: String
  "All values greater than the given value."
  copyrightFR_gt: String
  "All values greater than or equal the given value."
  copyrightFR_gte: String
  "All values that are contained in given list."
  copyrightFR_in: [String!]
  "All values less than the given value."
  copyrightFR_lt: String
  "All values less than or equal the given value."
  copyrightFR_lte: String
  "All values that are not equal to given value."
  copyrightFR_not: String
  "All values not containing the given string."
  copyrightFR_not_contains: String
  "All values not ending with the given string."
  copyrightFR_not_ends_with: String
  "All values that are not contained in given list."
  copyrightFR_not_in: [String!]
  "All values not starting with the given string."
  copyrightFR_not_starts_with: String
  "All values starting with the given string."
  copyrightFR_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  serviceLabelEN: String
  "All values containing the given string."
  serviceLabelEN_contains: String
  "All values ending with the given string."
  serviceLabelEN_ends_with: String
  "All values greater than the given value."
  serviceLabelEN_gt: String
  "All values greater than or equal the given value."
  serviceLabelEN_gte: String
  "All values that are contained in given list."
  serviceLabelEN_in: [String!]
  "All values less than the given value."
  serviceLabelEN_lt: String
  "All values less than or equal the given value."
  serviceLabelEN_lte: String
  "All values that are not equal to given value."
  serviceLabelEN_not: String
  "All values not containing the given string."
  serviceLabelEN_not_contains: String
  "All values not ending with the given string."
  serviceLabelEN_not_ends_with: String
  "All values that are not contained in given list."
  serviceLabelEN_not_in: [String!]
  "All values not starting with the given string."
  serviceLabelEN_not_starts_with: String
  "All values starting with the given string."
  serviceLabelEN_starts_with: String
  serviceLabelFR: String
  "All values containing the given string."
  serviceLabelFR_contains: String
  "All values ending with the given string."
  serviceLabelFR_ends_with: String
  "All values greater than the given value."
  serviceLabelFR_gt: String
  "All values greater than or equal the given value."
  serviceLabelFR_gte: String
  "All values that are contained in given list."
  serviceLabelFR_in: [String!]
  "All values less than the given value."
  serviceLabelFR_lt: String
  "All values less than or equal the given value."
  serviceLabelFR_lte: String
  "All values that are not equal to given value."
  serviceLabelFR_not: String
  "All values not containing the given string."
  serviceLabelFR_not_contains: String
  "All values not ending with the given string."
  serviceLabelFR_not_ends_with: String
  "All values that are not contained in given list."
  serviceLabelFR_not_in: [String!]
  "All values not starting with the given string."
  serviceLabelFR_not_starts_with: String
  "All values starting with the given string."
  serviceLabelFR_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input OrganisationTFPSettingsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationTFPSettingsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationTFPSettingsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationTFPSettingsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: OrganisationTFPSettingsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input OrganisationTFPSettingsUpdateInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationUpdateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsUpdateManyDataInput {
  copyrightEN: String
  copyrightFR: String
  serviceLabelEN: String
  serviceLabelFR: String
  status: Status
}

input OrganisationTFPSettingsUpdateManyMutationInput {
  copyrightEN: String
  copyrightFR: String
  serviceLabelEN: String
  serviceLabelFR: String
  status: Status
}

input OrganisationTFPSettingsUpdateManyWithWhereNestedInput {
  data: OrganisationTFPSettingsUpdateManyDataInput!
  where: OrganisationTFPSettingsScalarWhereInput!
}

input OrganisationTFPSettingsUpdateManyWithoutFaviconInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutFaviconInput!]
  delete: [OrganisationTFPSettingsWhereUniqueInput!]
  deleteMany: [OrganisationTFPSettingsScalarWhereInput!]
  disconnect: [OrganisationTFPSettingsWhereUniqueInput!]
  set: [OrganisationTFPSettingsWhereUniqueInput!]
  update: [OrganisationTFPSettingsUpdateWithWhereUniqueWithoutFaviconInput!]
  updateMany: [OrganisationTFPSettingsUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationTFPSettingsUpsertWithWhereUniqueWithoutFaviconInput!]
}

input OrganisationTFPSettingsUpdateManyWithoutServiceLogoENInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutServiceLogoENInput!]
  delete: [OrganisationTFPSettingsWhereUniqueInput!]
  deleteMany: [OrganisationTFPSettingsScalarWhereInput!]
  disconnect: [OrganisationTFPSettingsWhereUniqueInput!]
  set: [OrganisationTFPSettingsWhereUniqueInput!]
  update: [OrganisationTFPSettingsUpdateWithWhereUniqueWithoutServiceLogoENInput!]
  updateMany: [OrganisationTFPSettingsUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationTFPSettingsUpsertWithWhereUniqueWithoutServiceLogoENInput!]
}

input OrganisationTFPSettingsUpdateManyWithoutServiceLogoFRInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutServiceLogoFRInput!]
  delete: [OrganisationTFPSettingsWhereUniqueInput!]
  deleteMany: [OrganisationTFPSettingsScalarWhereInput!]
  disconnect: [OrganisationTFPSettingsWhereUniqueInput!]
  set: [OrganisationTFPSettingsWhereUniqueInput!]
  update: [OrganisationTFPSettingsUpdateWithWhereUniqueWithoutServiceLogoFRInput!]
  updateMany: [OrganisationTFPSettingsUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationTFPSettingsUpsertWithWhereUniqueWithoutServiceLogoFRInput!]
}

input OrganisationTFPSettingsUpdateManyWithoutSlsReleaseInput {
  connect: [OrganisationTFPSettingsWhereUniqueInput!]
  create: [OrganisationTFPSettingsCreateWithoutSlsReleaseInput!]
  delete: [OrganisationTFPSettingsWhereUniqueInput!]
  deleteMany: [OrganisationTFPSettingsScalarWhereInput!]
  disconnect: [OrganisationTFPSettingsWhereUniqueInput!]
  set: [OrganisationTFPSettingsWhereUniqueInput!]
  update: [OrganisationTFPSettingsUpdateWithWhereUniqueWithoutSlsReleaseInput!]
  updateMany: [OrganisationTFPSettingsUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationTFPSettingsUpsertWithWhereUniqueWithoutSlsReleaseInput!]
}

input OrganisationTFPSettingsUpdateOneWithoutOrganisationInput {
  connect: OrganisationTFPSettingsWhereUniqueInput
  create: OrganisationTFPSettingsCreateWithoutOrganisationInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationTFPSettingsUpdateWithoutOrganisationDataInput
  upsert: OrganisationTFPSettingsUpsertWithoutOrganisationInput
}

input OrganisationTFPSettingsUpdateWithWhereUniqueWithoutFaviconInput {
  data: OrganisationTFPSettingsUpdateWithoutFaviconDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpdateWithWhereUniqueWithoutServiceLogoENInput {
  data: OrganisationTFPSettingsUpdateWithoutServiceLogoENDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpdateWithWhereUniqueWithoutServiceLogoFRInput {
  data: OrganisationTFPSettingsUpdateWithoutServiceLogoFRDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpdateWithWhereUniqueWithoutSlsReleaseInput {
  data: OrganisationTFPSettingsUpdateWithoutSlsReleaseDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpdateWithoutFaviconDataInput {
  copyrightEN: String
  copyrightFR: String
  organisation: OrganisationUpdateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsUpdateWithoutOrganisationDataInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsUpdateWithoutServiceLogoENDataInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationUpdateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoFR: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  slsRelease: SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsUpdateWithoutServiceLogoFRDataInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationUpdateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  slsRelease: SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput
  status: Status
}

input OrganisationTFPSettingsUpdateWithoutSlsReleaseDataInput {
  copyrightEN: String
  copyrightFR: String
  favicon: AssetUpdateOneWithoutFaviconOrganisationTFPSettingsInput
  organisation: OrganisationUpdateOneWithoutOrganisationTFPSettingsInput
  serviceLabelEN: String
  serviceLabelFR: String
  serviceLogoEN: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsENInput
  serviceLogoFR: AssetUpdateOneWithoutServiceLogoOrganisationTFPSettingsFRInput
  status: Status
}

input OrganisationTFPSettingsUpsertWithWhereUniqueWithoutFaviconInput {
  create: OrganisationTFPSettingsCreateWithoutFaviconInput!
  update: OrganisationTFPSettingsUpdateWithoutFaviconDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpsertWithWhereUniqueWithoutServiceLogoENInput {
  create: OrganisationTFPSettingsCreateWithoutServiceLogoENInput!
  update: OrganisationTFPSettingsUpdateWithoutServiceLogoENDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpsertWithWhereUniqueWithoutServiceLogoFRInput {
  create: OrganisationTFPSettingsCreateWithoutServiceLogoFRInput!
  update: OrganisationTFPSettingsUpdateWithoutServiceLogoFRDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpsertWithWhereUniqueWithoutSlsReleaseInput {
  create: OrganisationTFPSettingsCreateWithoutSlsReleaseInput!
  update: OrganisationTFPSettingsUpdateWithoutSlsReleaseDataInput!
  where: OrganisationTFPSettingsWhereUniqueInput!
}

input OrganisationTFPSettingsUpsertWithoutOrganisationInput {
  create: OrganisationTFPSettingsCreateWithoutOrganisationInput!
  update: OrganisationTFPSettingsUpdateWithoutOrganisationDataInput!
}

input OrganisationTFPSettingsWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationTFPSettingsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationTFPSettingsWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationTFPSettingsWhereInput!]
  copyrightEN: String
  "All values containing the given string."
  copyrightEN_contains: String
  "All values ending with the given string."
  copyrightEN_ends_with: String
  "All values greater than the given value."
  copyrightEN_gt: String
  "All values greater than or equal the given value."
  copyrightEN_gte: String
  "All values that are contained in given list."
  copyrightEN_in: [String!]
  "All values less than the given value."
  copyrightEN_lt: String
  "All values less than or equal the given value."
  copyrightEN_lte: String
  "All values that are not equal to given value."
  copyrightEN_not: String
  "All values not containing the given string."
  copyrightEN_not_contains: String
  "All values not ending with the given string."
  copyrightEN_not_ends_with: String
  "All values that are not contained in given list."
  copyrightEN_not_in: [String!]
  "All values not starting with the given string."
  copyrightEN_not_starts_with: String
  "All values starting with the given string."
  copyrightEN_starts_with: String
  copyrightFR: String
  "All values containing the given string."
  copyrightFR_contains: String
  "All values ending with the given string."
  copyrightFR_ends_with: String
  "All values greater than the given value."
  copyrightFR_gt: String
  "All values greater than or equal the given value."
  copyrightFR_gte: String
  "All values that are contained in given list."
  copyrightFR_in: [String!]
  "All values less than the given value."
  copyrightFR_lt: String
  "All values less than or equal the given value."
  copyrightFR_lte: String
  "All values that are not equal to given value."
  copyrightFR_not: String
  "All values not containing the given string."
  copyrightFR_not_contains: String
  "All values not ending with the given string."
  copyrightFR_not_ends_with: String
  "All values that are not contained in given list."
  copyrightFR_not_in: [String!]
  "All values not starting with the given string."
  copyrightFR_not_starts_with: String
  "All values starting with the given string."
  copyrightFR_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  favicon: AssetWhereInput
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  organisation: OrganisationWhereInput
  serviceLabelEN: String
  "All values containing the given string."
  serviceLabelEN_contains: String
  "All values ending with the given string."
  serviceLabelEN_ends_with: String
  "All values greater than the given value."
  serviceLabelEN_gt: String
  "All values greater than or equal the given value."
  serviceLabelEN_gte: String
  "All values that are contained in given list."
  serviceLabelEN_in: [String!]
  "All values less than the given value."
  serviceLabelEN_lt: String
  "All values less than or equal the given value."
  serviceLabelEN_lte: String
  "All values that are not equal to given value."
  serviceLabelEN_not: String
  "All values not containing the given string."
  serviceLabelEN_not_contains: String
  "All values not ending with the given string."
  serviceLabelEN_not_ends_with: String
  "All values that are not contained in given list."
  serviceLabelEN_not_in: [String!]
  "All values not starting with the given string."
  serviceLabelEN_not_starts_with: String
  "All values starting with the given string."
  serviceLabelEN_starts_with: String
  serviceLabelFR: String
  "All values containing the given string."
  serviceLabelFR_contains: String
  "All values ending with the given string."
  serviceLabelFR_ends_with: String
  "All values greater than the given value."
  serviceLabelFR_gt: String
  "All values greater than or equal the given value."
  serviceLabelFR_gte: String
  "All values that are contained in given list."
  serviceLabelFR_in: [String!]
  "All values less than the given value."
  serviceLabelFR_lt: String
  "All values less than or equal the given value."
  serviceLabelFR_lte: String
  "All values that are not equal to given value."
  serviceLabelFR_not: String
  "All values not containing the given string."
  serviceLabelFR_not_contains: String
  "All values not ending with the given string."
  serviceLabelFR_not_ends_with: String
  "All values that are not contained in given list."
  serviceLabelFR_not_in: [String!]
  "All values not starting with the given string."
  serviceLabelFR_not_starts_with: String
  "All values starting with the given string."
  serviceLabelFR_starts_with: String
  serviceLogoEN: AssetWhereInput
  serviceLogoFR: AssetWhereInput
  slsRelease: SlsReleaseWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input OrganisationTFPSettingsWhereUniqueInput {
  id: ID
}

input OrganisationUpdateInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateManyDataInput {
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input OrganisationUpdateManyMutationInput {
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input OrganisationUpdateManyWithWhereNestedInput {
  data: OrganisationUpdateManyDataInput!
  where: OrganisationScalarWhereInput!
}

input OrganisationUpdateManyWithoutLogoENInput {
  connect: [OrganisationWhereUniqueInput!]
  create: [OrganisationCreateWithoutLogoENInput!]
  delete: [OrganisationWhereUniqueInput!]
  deleteMany: [OrganisationScalarWhereInput!]
  disconnect: [OrganisationWhereUniqueInput!]
  set: [OrganisationWhereUniqueInput!]
  update: [OrganisationUpdateWithWhereUniqueWithoutLogoENInput!]
  updateMany: [OrganisationUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationUpsertWithWhereUniqueWithoutLogoENInput!]
}

input OrganisationUpdateManyWithoutLogoFRInput {
  connect: [OrganisationWhereUniqueInput!]
  create: [OrganisationCreateWithoutLogoFRInput!]
  delete: [OrganisationWhereUniqueInput!]
  deleteMany: [OrganisationScalarWhereInput!]
  disconnect: [OrganisationWhereUniqueInput!]
  set: [OrganisationWhereUniqueInput!]
  update: [OrganisationUpdateWithWhereUniqueWithoutLogoFRInput!]
  updateMany: [OrganisationUpdateManyWithWhereNestedInput!]
  upsert: [OrganisationUpsertWithWhereUniqueWithoutLogoFRInput!]
}

input OrganisationUpdateOneWithoutInstitutionsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutInstitutionsInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationUpdateWithoutInstitutionsDataInput
  upsert: OrganisationUpsertWithoutInstitutionsInput
}

input OrganisationUpdateOneWithoutOrganisationTFPSettingsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutOrganisationTFPSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationUpdateWithoutOrganisationTFPSettingsDataInput
  upsert: OrganisationUpsertWithoutOrganisationTFPSettingsInput
}

input OrganisationUpdateOneWithoutOwnedAssetsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutOwnedAssetsInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationUpdateWithoutOwnedAssetsDataInput
  upsert: OrganisationUpsertWithoutOwnedAssetsInput
}

input OrganisationUpdateOneWithoutStudentSolutionsInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutStudentSolutionsInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationUpdateWithoutStudentSolutionsDataInput
  upsert: OrganisationUpsertWithoutStudentSolutionsInput
}

input OrganisationUpdateOneWithoutThemeInput {
  connect: OrganisationWhereUniqueInput
  create: OrganisationCreateWithoutThemeInput
  delete: Boolean
  disconnect: Boolean
  update: OrganisationUpdateWithoutThemeDataInput
  upsert: OrganisationUpsertWithoutThemeInput
}

input OrganisationUpdateWithWhereUniqueWithoutLogoENInput {
  data: OrganisationUpdateWithoutLogoENDataInput!
  where: OrganisationWhereUniqueInput!
}

input OrganisationUpdateWithWhereUniqueWithoutLogoFRInput {
  data: OrganisationUpdateWithoutLogoFRDataInput!
  where: OrganisationWhereUniqueInput!
}

input OrganisationUpdateWithoutInstitutionsDataInput {
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutLogoENDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutLogoFRDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutOrganisationTFPSettingsDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutOwnedAssetsDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutStudentSolutionsDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  theme: ThemeUpdateOneWithoutOrganisationInput
}

input OrganisationUpdateWithoutThemeDataInput {
  institutions: InstitutionUpdateManyWithoutOrganisationInput
  labelEN: String
  labelFR: String
  logoEN: AssetUpdateOneWithoutLogoOrganisationENInput
  logoFR: AssetUpdateOneWithoutLogoOrganisationFRInput
  name: String
  organisationTFPSettings: OrganisationTFPSettingsUpdateOneWithoutOrganisationInput
  ownedAssets: AssetUpdateManyWithoutOrganisationOwnerInput
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutOrganisationOwnerInput
}

input OrganisationUpsertWithWhereUniqueWithoutLogoENInput {
  create: OrganisationCreateWithoutLogoENInput!
  update: OrganisationUpdateWithoutLogoENDataInput!
  where: OrganisationWhereUniqueInput!
}

input OrganisationUpsertWithWhereUniqueWithoutLogoFRInput {
  create: OrganisationCreateWithoutLogoFRInput!
  update: OrganisationUpdateWithoutLogoFRDataInput!
  where: OrganisationWhereUniqueInput!
}

input OrganisationUpsertWithoutInstitutionsInput {
  create: OrganisationCreateWithoutInstitutionsInput!
  update: OrganisationUpdateWithoutInstitutionsDataInput!
}

input OrganisationUpsertWithoutOrganisationTFPSettingsInput {
  create: OrganisationCreateWithoutOrganisationTFPSettingsInput!
  update: OrganisationUpdateWithoutOrganisationTFPSettingsDataInput!
}

input OrganisationUpsertWithoutOwnedAssetsInput {
  create: OrganisationCreateWithoutOwnedAssetsInput!
  update: OrganisationUpdateWithoutOwnedAssetsDataInput!
}

input OrganisationUpsertWithoutStudentSolutionsInput {
  create: OrganisationCreateWithoutStudentSolutionsInput!
  update: OrganisationUpdateWithoutStudentSolutionsDataInput!
}

input OrganisationUpsertWithoutThemeInput {
  create: OrganisationCreateWithoutThemeInput!
  update: OrganisationUpdateWithoutThemeDataInput!
}

input OrganisationWhereInput {
  "Logical AND on all given filters."
  AND: [OrganisationWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [OrganisationWhereInput!]
  "Logical OR on all given filters."
  OR: [OrganisationWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institutions_every: InstitutionWhereInput
  institutions_none: InstitutionWhereInput
  institutions_some: InstitutionWhereInput
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  logoEN: AssetWhereInput
  logoFR: AssetWhereInput
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  organisationTFPSettings: OrganisationTFPSettingsWhereInput
  ownedAssets_every: AssetWhereInput
  ownedAssets_none: AssetWhereInput
  ownedAssets_some: AssetWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  studentSolutions_every: StudentSolutionWhereInput
  studentSolutions_none: StudentSolutionWhereInput
  studentSolutions_some: StudentSolutionWhereInput
  theme: ThemeWhereInput
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input OrganisationWhereUniqueInput {
  id: ID
  name: String
}

input SlsReleaseCreateInput {
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  organisationsTFPSettings: OrganisationTFPSettingsCreateManyWithoutSlsReleaseInput
  release: String!
  releasedAt: DateTime!
  status: Status
}

input SlsReleaseCreateOneWithoutOrganisationsTFPSettingsInput {
  connect: SlsReleaseWhereUniqueInput
  create: SlsReleaseCreateWithoutOrganisationsTFPSettingsInput
}

input SlsReleaseCreateWithoutOrganisationsTFPSettingsInput {
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  release: String!
  releasedAt: DateTime!
  status: Status
}

input SlsReleaseSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [SlsReleaseSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [SlsReleaseSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [SlsReleaseSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: SlsReleaseWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input SlsReleaseUpdateInput {
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  organisationsTFPSettings: OrganisationTFPSettingsUpdateManyWithoutSlsReleaseInput
  release: String
  releasedAt: DateTime
  status: Status
}

input SlsReleaseUpdateManyMutationInput {
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  release: String
  releasedAt: DateTime
  status: Status
}

input SlsReleaseUpdateOneWithoutOrganisationsTFPSettingsInput {
  connect: SlsReleaseWhereUniqueInput
  create: SlsReleaseCreateWithoutOrganisationsTFPSettingsInput
  delete: Boolean
  disconnect: Boolean
  update: SlsReleaseUpdateWithoutOrganisationsTFPSettingsDataInput
  upsert: SlsReleaseUpsertWithoutOrganisationsTFPSettingsInput
}

input SlsReleaseUpdateWithoutOrganisationsTFPSettingsDataInput {
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  release: String
  releasedAt: DateTime
  status: Status
}

input SlsReleaseUpsertWithoutOrganisationsTFPSettingsInput {
  create: SlsReleaseCreateWithoutOrganisationsTFPSettingsInput!
  update: SlsReleaseUpdateWithoutOrganisationsTFPSettingsDataInput!
}

input SlsReleaseWhereInput {
  "Logical AND on all given filters."
  AND: [SlsReleaseWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [SlsReleaseWhereInput!]
  "Logical OR on all given filters."
  OR: [SlsReleaseWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  organisationsTFPSettings_every: OrganisationTFPSettingsWhereInput
  organisationsTFPSettings_none: OrganisationTFPSettingsWhereInput
  organisationsTFPSettings_some: OrganisationTFPSettingsWhereInput
  release: String
  "All values containing the given string."
  release_contains: String
  "All values ending with the given string."
  release_ends_with: String
  "All values greater than the given value."
  release_gt: String
  "All values greater than or equal the given value."
  release_gte: String
  "All values that are contained in given list."
  release_in: [String!]
  "All values less than the given value."
  release_lt: String
  "All values less than or equal the given value."
  release_lte: String
  "All values that are not equal to given value."
  release_not: String
  "All values not containing the given string."
  release_not_contains: String
  "All values not ending with the given string."
  release_not_ends_with: String
  "All values that are not contained in given list."
  release_not_in: [String!]
  "All values not starting with the given string."
  release_not_starts_with: String
  "All values starting with the given string."
  release_starts_with: String
  releasedAt: DateTime
  "All values greater than the given value."
  releasedAt_gt: DateTime
  "All values greater than or equal the given value."
  releasedAt_gte: DateTime
  "All values that are contained in given list."
  releasedAt_in: [DateTime!]
  "All values less than the given value."
  releasedAt_lt: DateTime
  "All values less than or equal the given value."
  releasedAt_lte: DateTime
  "All values that are not equal to given value."
  releasedAt_not: DateTime
  "All values that are not contained in given list."
  releasedAt_not_in: [DateTime!]
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input SlsReleaseWhereUniqueInput {
  id: ID
  release: String
}

input StudentSolutionCategoryCreateInput {
  altTextsEN: StudentSolutionCategoryCreatealtTextsENInput
  altTextsFR: StudentSolutionCategoryCreatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  institution: InstitutionCreateOneWithoutStudentSolutionCategoriesInput
  labelEN: String
  labelFR: String
  name: String!
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutCategoriesInput
}

input StudentSolutionCategoryCreateManyWithoutInstitutionInput {
  connect: [StudentSolutionCategoryWhereUniqueInput!]
  create: [StudentSolutionCategoryCreateWithoutInstitutionInput!]
}

input StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput {
  connect: [StudentSolutionCategoryWhereUniqueInput!]
  create: [StudentSolutionCategoryCreateWithoutStudentSolutionsInput!]
}

input StudentSolutionCategoryCreateWithoutInstitutionInput {
  altTextsEN: StudentSolutionCategoryCreatealtTextsENInput
  altTextsFR: StudentSolutionCategoryCreatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  labelEN: String
  labelFR: String
  name: String!
  status: Status
  studentSolutions: StudentSolutionCreateManyWithoutCategoriesInput
}

input StudentSolutionCategoryCreateWithoutStudentSolutionsInput {
  altTextsEN: StudentSolutionCategoryCreatealtTextsENInput
  altTextsFR: StudentSolutionCategoryCreatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  institution: InstitutionCreateOneWithoutStudentSolutionCategoriesInput
  labelEN: String
  labelFR: String
  name: String!
  status: Status
}

input StudentSolutionCategoryCreatealtTextsENInput {
  set: [String!]
}

input StudentSolutionCategoryCreatealtTextsFRInput {
  set: [String!]
}

input StudentSolutionCategoryScalarWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionCategoryScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionCategoryScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionCategoryScalarWhereInput!]
  backgroundColor: String
  "All values containing the given string."
  backgroundColor_contains: String
  "All values ending with the given string."
  backgroundColor_ends_with: String
  "All values greater than the given value."
  backgroundColor_gt: String
  "All values greater than or equal the given value."
  backgroundColor_gte: String
  "All values that are contained in given list."
  backgroundColor_in: [String!]
  "All values less than the given value."
  backgroundColor_lt: String
  "All values less than or equal the given value."
  backgroundColor_lte: String
  "All values that are not equal to given value."
  backgroundColor_not: String
  "All values not containing the given string."
  backgroundColor_not_contains: String
  "All values not ending with the given string."
  backgroundColor_not_ends_with: String
  "All values that are not contained in given list."
  backgroundColor_not_in: [String!]
  "All values not starting with the given string."
  backgroundColor_not_starts_with: String
  "All values starting with the given string."
  backgroundColor_starts_with: String
  color: String
  "All values containing the given string."
  color_contains: String
  "All values ending with the given string."
  color_ends_with: String
  "All values greater than the given value."
  color_gt: String
  "All values greater than or equal the given value."
  color_gte: String
  "All values that are contained in given list."
  color_in: [String!]
  "All values less than the given value."
  color_lt: String
  "All values less than or equal the given value."
  color_lte: String
  "All values that are not equal to given value."
  color_not: String
  "All values not containing the given string."
  color_not_contains: String
  "All values not ending with the given string."
  color_not_ends_with: String
  "All values that are not contained in given list."
  color_not_in: [String!]
  "All values not starting with the given string."
  color_not_starts_with: String
  "All values starting with the given string."
  color_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  displayOrder: Int
  "All values greater than the given value."
  displayOrder_gt: Int
  "All values greater than or equal the given value."
  displayOrder_gte: Int
  "All values that are contained in given list."
  displayOrder_in: [Int!]
  "All values less than the given value."
  displayOrder_lt: Int
  "All values less than or equal the given value."
  displayOrder_lte: Int
  "All values that are not equal to given value."
  displayOrder_not: Int
  "All values that are not contained in given list."
  displayOrder_not_in: [Int!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input StudentSolutionCategorySubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionCategorySubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionCategorySubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionCategorySubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: StudentSolutionCategoryWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input StudentSolutionCategoryUpdateInput {
  altTextsEN: StudentSolutionCategoryUpdatealtTextsENInput
  altTextsFR: StudentSolutionCategoryUpdatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  institution: InstitutionUpdateOneWithoutStudentSolutionCategoriesInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutCategoriesInput
}

input StudentSolutionCategoryUpdateManyDataInput {
  altTextsEN: StudentSolutionCategoryUpdatealtTextsENInput
  altTextsFR: StudentSolutionCategoryUpdatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input StudentSolutionCategoryUpdateManyMutationInput {
  altTextsEN: StudentSolutionCategoryUpdatealtTextsENInput
  altTextsFR: StudentSolutionCategoryUpdatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input StudentSolutionCategoryUpdateManyWithWhereNestedInput {
  data: StudentSolutionCategoryUpdateManyDataInput!
  where: StudentSolutionCategoryScalarWhereInput!
}

input StudentSolutionCategoryUpdateManyWithoutInstitutionInput {
  connect: [StudentSolutionCategoryWhereUniqueInput!]
  create: [StudentSolutionCategoryCreateWithoutInstitutionInput!]
  delete: [StudentSolutionCategoryWhereUniqueInput!]
  deleteMany: [StudentSolutionCategoryScalarWhereInput!]
  disconnect: [StudentSolutionCategoryWhereUniqueInput!]
  set: [StudentSolutionCategoryWhereUniqueInput!]
  update: [StudentSolutionCategoryUpdateWithWhereUniqueWithoutInstitutionInput!]
  updateMany: [StudentSolutionCategoryUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionCategoryUpsertWithWhereUniqueWithoutInstitutionInput!]
}

input StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput {
  connect: [StudentSolutionCategoryWhereUniqueInput!]
  create: [StudentSolutionCategoryCreateWithoutStudentSolutionsInput!]
  delete: [StudentSolutionCategoryWhereUniqueInput!]
  deleteMany: [StudentSolutionCategoryScalarWhereInput!]
  disconnect: [StudentSolutionCategoryWhereUniqueInput!]
  set: [StudentSolutionCategoryWhereUniqueInput!]
  update: [StudentSolutionCategoryUpdateWithWhereUniqueWithoutStudentSolutionsInput!]
  updateMany: [StudentSolutionCategoryUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionCategoryUpsertWithWhereUniqueWithoutStudentSolutionsInput!]
}

input StudentSolutionCategoryUpdateWithWhereUniqueWithoutInstitutionInput {
  data: StudentSolutionCategoryUpdateWithoutInstitutionDataInput!
  where: StudentSolutionCategoryWhereUniqueInput!
}

input StudentSolutionCategoryUpdateWithWhereUniqueWithoutStudentSolutionsInput {
  data: StudentSolutionCategoryUpdateWithoutStudentSolutionsDataInput!
  where: StudentSolutionCategoryWhereUniqueInput!
}

input StudentSolutionCategoryUpdateWithoutInstitutionDataInput {
  altTextsEN: StudentSolutionCategoryUpdatealtTextsENInput
  altTextsFR: StudentSolutionCategoryUpdatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  labelEN: String
  labelFR: String
  name: String
  status: Status
  studentSolutions: StudentSolutionUpdateManyWithoutCategoriesInput
}

input StudentSolutionCategoryUpdateWithoutStudentSolutionsDataInput {
  altTextsEN: StudentSolutionCategoryUpdatealtTextsENInput
  altTextsFR: StudentSolutionCategoryUpdatealtTextsFRInput
  backgroundColor: String
  color: String
  displayOrder: Int
  institution: InstitutionUpdateOneWithoutStudentSolutionCategoriesInput
  labelEN: String
  labelFR: String
  name: String
  status: Status
}

input StudentSolutionCategoryUpdatealtTextsENInput {
  set: [String!]
}

input StudentSolutionCategoryUpdatealtTextsFRInput {
  set: [String!]
}

input StudentSolutionCategoryUpsertWithWhereUniqueWithoutInstitutionInput {
  create: StudentSolutionCategoryCreateWithoutInstitutionInput!
  update: StudentSolutionCategoryUpdateWithoutInstitutionDataInput!
  where: StudentSolutionCategoryWhereUniqueInput!
}

input StudentSolutionCategoryUpsertWithWhereUniqueWithoutStudentSolutionsInput {
  create: StudentSolutionCategoryCreateWithoutStudentSolutionsInput!
  update: StudentSolutionCategoryUpdateWithoutStudentSolutionsDataInput!
  where: StudentSolutionCategoryWhereUniqueInput!
}

input StudentSolutionCategoryWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionCategoryWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionCategoryWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionCategoryWhereInput!]
  backgroundColor: String
  "All values containing the given string."
  backgroundColor_contains: String
  "All values ending with the given string."
  backgroundColor_ends_with: String
  "All values greater than the given value."
  backgroundColor_gt: String
  "All values greater than or equal the given value."
  backgroundColor_gte: String
  "All values that are contained in given list."
  backgroundColor_in: [String!]
  "All values less than the given value."
  backgroundColor_lt: String
  "All values less than or equal the given value."
  backgroundColor_lte: String
  "All values that are not equal to given value."
  backgroundColor_not: String
  "All values not containing the given string."
  backgroundColor_not_contains: String
  "All values not ending with the given string."
  backgroundColor_not_ends_with: String
  "All values that are not contained in given list."
  backgroundColor_not_in: [String!]
  "All values not starting with the given string."
  backgroundColor_not_starts_with: String
  "All values starting with the given string."
  backgroundColor_starts_with: String
  color: String
  "All values containing the given string."
  color_contains: String
  "All values ending with the given string."
  color_ends_with: String
  "All values greater than the given value."
  color_gt: String
  "All values greater than or equal the given value."
  color_gte: String
  "All values that are contained in given list."
  color_in: [String!]
  "All values less than the given value."
  color_lt: String
  "All values less than or equal the given value."
  color_lte: String
  "All values that are not equal to given value."
  color_not: String
  "All values not containing the given string."
  color_not_contains: String
  "All values not ending with the given string."
  color_not_ends_with: String
  "All values that are not contained in given list."
  color_not_in: [String!]
  "All values not starting with the given string."
  color_not_starts_with: String
  "All values starting with the given string."
  color_starts_with: String
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  displayOrder: Int
  "All values greater than the given value."
  displayOrder_gt: Int
  "All values greater than or equal the given value."
  displayOrder_gte: Int
  "All values that are contained in given list."
  displayOrder_in: [Int!]
  "All values less than the given value."
  displayOrder_lt: Int
  "All values less than or equal the given value."
  displayOrder_lte: Int
  "All values that are not equal to given value."
  displayOrder_not: Int
  "All values that are not contained in given list."
  displayOrder_not_in: [Int!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  studentSolutions_every: StudentSolutionWhereInput
  studentSolutions_none: StudentSolutionWhereInput
  studentSolutions_some: StudentSolutionWhereInput
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input StudentSolutionCategoryWhereUniqueInput {
  id: ID
  name: String
}

input StudentSolutionCreateInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateManyWithoutAdditionalDocumentsENInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutAdditionalDocumentsENInput!]
}

input StudentSolutionCreateManyWithoutAdditionalDocumentsFRInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutAdditionalDocumentsFRInput!]
}

input StudentSolutionCreateManyWithoutCategoriesInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutCategoriesInput!]
}

input StudentSolutionCreateManyWithoutLogoENInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutLogoENInput!]
}

input StudentSolutionCreateManyWithoutLogoFRInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutLogoFRInput!]
}

input StudentSolutionCreateManyWithoutOrganisationOwnerInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutOrganisationOwnerInput!]
}

input StudentSolutionCreateWithoutAdditionalDocumentsENInput {
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateWithoutAdditionalDocumentsFRInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateWithoutCategoriesInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateWithoutLogoENInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateWithoutLogoFRInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  organisationOwner: OrganisationCreateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateWithoutOrganisationOwnerInput {
  additionalDocumentsEN: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetCreateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionCreateadditionalLinksENInput
  additionalLinksFR: StudentSolutionCreateadditionalLinksFRInput
  agenciesEN: StudentSolutionCreateagenciesENInput
  agenciesFR: StudentSolutionCreateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryCreateManyWithoutStudentSolutionsInput
  criteria: Json!
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetCreateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetCreateOneWithoutLogoStudentSolutionFRInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionCreateadditionalLinksENInput {
  set: [Json!]
}

input StudentSolutionCreateadditionalLinksFRInput {
  set: [Json!]
}

input StudentSolutionCreateagenciesENInput {
  set: [Json!]
}

input StudentSolutionCreateagenciesFRInput {
  set: [Json!]
}

input StudentSolutionScalarWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionScalarWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  displayOrder: Int
  "All values greater than the given value."
  displayOrder_gt: Int
  "All values greater than or equal the given value."
  displayOrder_gte: Int
  "All values that are contained in given list."
  displayOrder_in: [Int!]
  "All values less than the given value."
  displayOrder_lt: Int
  "All values less than or equal the given value."
  displayOrder_lte: Int
  "All values that are not equal to given value."
  displayOrder_not: Int
  "All values that are not contained in given list."
  displayOrder_not_in: [Int!]
  displaySLS: Boolean
  "All values that are not equal to given value."
  displaySLS_not: Boolean
  expiresAt: DateTime
  "All values greater than the given value."
  expiresAt_gt: DateTime
  "All values greater than or equal the given value."
  expiresAt_gte: DateTime
  "All values that are contained in given list."
  expiresAt_in: [DateTime!]
  "All values less than the given value."
  expiresAt_lt: DateTime
  "All values less than or equal the given value."
  expiresAt_lte: DateTime
  "All values that are not equal to given value."
  expiresAt_not: DateTime
  "All values that are not contained in given list."
  expiresAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  interestRate: Float
  "All values greater than the given value."
  interestRate_gt: Float
  "All values greater than or equal the given value."
  interestRate_gte: Float
  "All values that are contained in given list."
  interestRate_in: [Float!]
  "All values less than the given value."
  interestRate_lt: Float
  "All values less than or equal the given value."
  interestRate_lte: Float
  "All values that are not equal to given value."
  interestRate_not: Float
  "All values that are not contained in given list."
  interestRate_not_in: [Float!]
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  loanMaxAmount: Float
  "All values greater than the given value."
  loanMaxAmount_gt: Float
  "All values greater than or equal the given value."
  loanMaxAmount_gte: Float
  "All values that are contained in given list."
  loanMaxAmount_in: [Float!]
  "All values less than the given value."
  loanMaxAmount_lt: Float
  "All values less than or equal the given value."
  loanMaxAmount_lte: Float
  "All values that are not equal to given value."
  loanMaxAmount_not: Float
  "All values that are not contained in given list."
  loanMaxAmount_not_in: [Float!]
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input StudentSolutionSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: StudentSolutionWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input StudentSolutionUpdateInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateManyDataInput {
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateManyMutationInput {
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateManyWithWhereNestedInput {
  data: StudentSolutionUpdateManyDataInput!
  where: StudentSolutionScalarWhereInput!
}

input StudentSolutionUpdateManyWithoutAdditionalDocumentsENInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutAdditionalDocumentsENInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutAdditionalDocumentsENInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutAdditionalDocumentsENInput!]
}

input StudentSolutionUpdateManyWithoutAdditionalDocumentsFRInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutAdditionalDocumentsFRInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutAdditionalDocumentsFRInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutAdditionalDocumentsFRInput!]
}

input StudentSolutionUpdateManyWithoutCategoriesInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutCategoriesInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input StudentSolutionUpdateManyWithoutLogoENInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutLogoENInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutLogoENInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutLogoENInput!]
}

input StudentSolutionUpdateManyWithoutLogoFRInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutLogoFRInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutLogoFRInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutLogoFRInput!]
}

input StudentSolutionUpdateManyWithoutOrganisationOwnerInput {
  connect: [StudentSolutionWhereUniqueInput!]
  create: [StudentSolutionCreateWithoutOrganisationOwnerInput!]
  delete: [StudentSolutionWhereUniqueInput!]
  deleteMany: [StudentSolutionScalarWhereInput!]
  disconnect: [StudentSolutionWhereUniqueInput!]
  set: [StudentSolutionWhereUniqueInput!]
  update: [StudentSolutionUpdateWithWhereUniqueWithoutOrganisationOwnerInput!]
  updateMany: [StudentSolutionUpdateManyWithWhereNestedInput!]
  upsert: [StudentSolutionUpsertWithWhereUniqueWithoutOrganisationOwnerInput!]
}

input StudentSolutionUpdateWithWhereUniqueWithoutAdditionalDocumentsENInput {
  data: StudentSolutionUpdateWithoutAdditionalDocumentsENDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithWhereUniqueWithoutAdditionalDocumentsFRInput {
  data: StudentSolutionUpdateWithoutAdditionalDocumentsFRDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithWhereUniqueWithoutCategoriesInput {
  data: StudentSolutionUpdateWithoutCategoriesDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithWhereUniqueWithoutLogoENInput {
  data: StudentSolutionUpdateWithoutLogoENDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithWhereUniqueWithoutLogoFRInput {
  data: StudentSolutionUpdateWithoutLogoFRDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithWhereUniqueWithoutOrganisationOwnerInput {
  data: StudentSolutionUpdateWithoutOrganisationOwnerDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpdateWithoutAdditionalDocumentsENDataInput {
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateWithoutAdditionalDocumentsFRDataInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateWithoutCategoriesDataInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateWithoutLogoENDataInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateWithoutLogoFRDataInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  organisationOwner: OrganisationUpdateOneWithoutStudentSolutionsInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateWithoutOrganisationOwnerDataInput {
  additionalDocumentsEN: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionENInput
  additionalDocumentsFR: AssetUpdateManyWithoutAdditionalDocumentsStudentSolutionFRInput
  additionalLinksEN: StudentSolutionUpdateadditionalLinksENInput
  additionalLinksFR: StudentSolutionUpdateadditionalLinksFRInput
  agenciesEN: StudentSolutionUpdateagenciesENInput
  agenciesFR: StudentSolutionUpdateagenciesFRInput
  benefitsDescriptionEN: RichTextAST
  benefitsDescriptionFR: RichTextAST
  categories: StudentSolutionCategoryUpdateManyWithoutStudentSolutionsInput
  criteria: Json
  criteriaDescriptionEN: RichTextAST
  criteriaDescriptionFR: RichTextAST
  descriptionEN: RichTextAST
  descriptionFR: RichTextAST
  displayOrder: Int
  displaySLS: Boolean
  expiresAt: DateTime
  interestRate: Float
  labelEN: String
  labelFR: String
  loanMaxAmount: Float
  logoEN: AssetUpdateOneWithoutLogoStudentSolutionENInput
  logoFR: AssetUpdateOneWithoutLogoStudentSolutionFRInput
  specialPartnerOrganisationEN: Json
  specialPartnerOrganisationFR: Json
  status: Status
}

input StudentSolutionUpdateadditionalLinksENInput {
  set: [Json!]
}

input StudentSolutionUpdateadditionalLinksFRInput {
  set: [Json!]
}

input StudentSolutionUpdateagenciesENInput {
  set: [Json!]
}

input StudentSolutionUpdateagenciesFRInput {
  set: [Json!]
}

input StudentSolutionUpsertWithWhereUniqueWithoutAdditionalDocumentsENInput {
  create: StudentSolutionCreateWithoutAdditionalDocumentsENInput!
  update: StudentSolutionUpdateWithoutAdditionalDocumentsENDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpsertWithWhereUniqueWithoutAdditionalDocumentsFRInput {
  create: StudentSolutionCreateWithoutAdditionalDocumentsFRInput!
  update: StudentSolutionUpdateWithoutAdditionalDocumentsFRDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpsertWithWhereUniqueWithoutCategoriesInput {
  create: StudentSolutionCreateWithoutCategoriesInput!
  update: StudentSolutionUpdateWithoutCategoriesDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpsertWithWhereUniqueWithoutLogoENInput {
  create: StudentSolutionCreateWithoutLogoENInput!
  update: StudentSolutionUpdateWithoutLogoENDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpsertWithWhereUniqueWithoutLogoFRInput {
  create: StudentSolutionCreateWithoutLogoFRInput!
  update: StudentSolutionUpdateWithoutLogoFRDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionUpsertWithWhereUniqueWithoutOrganisationOwnerInput {
  create: StudentSolutionCreateWithoutOrganisationOwnerInput!
  update: StudentSolutionUpdateWithoutOrganisationOwnerDataInput!
  where: StudentSolutionWhereUniqueInput!
}

input StudentSolutionWhereInput {
  "Logical AND on all given filters."
  AND: [StudentSolutionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [StudentSolutionWhereInput!]
  "Logical OR on all given filters."
  OR: [StudentSolutionWhereInput!]
  additionalDocumentsEN_every: AssetWhereInput
  additionalDocumentsEN_none: AssetWhereInput
  additionalDocumentsEN_some: AssetWhereInput
  additionalDocumentsFR_every: AssetWhereInput
  additionalDocumentsFR_none: AssetWhereInput
  additionalDocumentsFR_some: AssetWhereInput
  categories_every: StudentSolutionCategoryWhereInput
  categories_none: StudentSolutionCategoryWhereInput
  categories_some: StudentSolutionCategoryWhereInput
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  displayOrder: Int
  "All values greater than the given value."
  displayOrder_gt: Int
  "All values greater than or equal the given value."
  displayOrder_gte: Int
  "All values that are contained in given list."
  displayOrder_in: [Int!]
  "All values less than the given value."
  displayOrder_lt: Int
  "All values less than or equal the given value."
  displayOrder_lte: Int
  "All values that are not equal to given value."
  displayOrder_not: Int
  "All values that are not contained in given list."
  displayOrder_not_in: [Int!]
  displaySLS: Boolean
  "All values that are not equal to given value."
  displaySLS_not: Boolean
  expiresAt: DateTime
  "All values greater than the given value."
  expiresAt_gt: DateTime
  "All values greater than or equal the given value."
  expiresAt_gte: DateTime
  "All values that are contained in given list."
  expiresAt_in: [DateTime!]
  "All values less than the given value."
  expiresAt_lt: DateTime
  "All values less than or equal the given value."
  expiresAt_lte: DateTime
  "All values that are not equal to given value."
  expiresAt_not: DateTime
  "All values that are not contained in given list."
  expiresAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  interestRate: Float
  "All values greater than the given value."
  interestRate_gt: Float
  "All values greater than or equal the given value."
  interestRate_gte: Float
  "All values that are contained in given list."
  interestRate_in: [Float!]
  "All values less than the given value."
  interestRate_lt: Float
  "All values less than or equal the given value."
  interestRate_lte: Float
  "All values that are not equal to given value."
  interestRate_not: Float
  "All values that are not contained in given list."
  interestRate_not_in: [Float!]
  labelEN: String
  "All values containing the given string."
  labelEN_contains: String
  "All values ending with the given string."
  labelEN_ends_with: String
  "All values greater than the given value."
  labelEN_gt: String
  "All values greater than or equal the given value."
  labelEN_gte: String
  "All values that are contained in given list."
  labelEN_in: [String!]
  "All values less than the given value."
  labelEN_lt: String
  "All values less than or equal the given value."
  labelEN_lte: String
  "All values that are not equal to given value."
  labelEN_not: String
  "All values not containing the given string."
  labelEN_not_contains: String
  "All values not ending with the given string."
  labelEN_not_ends_with: String
  "All values that are not contained in given list."
  labelEN_not_in: [String!]
  "All values not starting with the given string."
  labelEN_not_starts_with: String
  "All values starting with the given string."
  labelEN_starts_with: String
  labelFR: String
  "All values containing the given string."
  labelFR_contains: String
  "All values ending with the given string."
  labelFR_ends_with: String
  "All values greater than the given value."
  labelFR_gt: String
  "All values greater than or equal the given value."
  labelFR_gte: String
  "All values that are contained in given list."
  labelFR_in: [String!]
  "All values less than the given value."
  labelFR_lt: String
  "All values less than or equal the given value."
  labelFR_lte: String
  "All values that are not equal to given value."
  labelFR_not: String
  "All values not containing the given string."
  labelFR_not_contains: String
  "All values not ending with the given string."
  labelFR_not_ends_with: String
  "All values that are not contained in given list."
  labelFR_not_in: [String!]
  "All values not starting with the given string."
  labelFR_not_starts_with: String
  "All values starting with the given string."
  labelFR_starts_with: String
  loanMaxAmount: Float
  "All values greater than the given value."
  loanMaxAmount_gt: Float
  "All values greater than or equal the given value."
  loanMaxAmount_gte: Float
  "All values that are contained in given list."
  loanMaxAmount_in: [Float!]
  "All values less than the given value."
  loanMaxAmount_lt: Float
  "All values less than or equal the given value."
  loanMaxAmount_lte: Float
  "All values that are not equal to given value."
  loanMaxAmount_not: Float
  "All values that are not contained in given list."
  loanMaxAmount_not_in: [Float!]
  logoEN: AssetWhereInput
  logoFR: AssetWhereInput
  organisationOwner: OrganisationWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input StudentSolutionWhereUniqueInput {
  id: ID
}

input TfpSettingsCreateInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  favicon: AssetCreateOneWithoutFaviconTfpSettingsInput
  role: String!
  serviceLogo: AssetCreateOneWithoutServiceLogoTfpSettingsInput
  status: Status
}

input TfpSettingsCreateManyWithoutFaviconInput {
  connect: [TfpSettingsWhereUniqueInput!]
  create: [TfpSettingsCreateWithoutFaviconInput!]
}

input TfpSettingsCreateManyWithoutServiceLogoInput {
  connect: [TfpSettingsWhereUniqueInput!]
  create: [TfpSettingsCreateWithoutServiceLogoInput!]
}

input TfpSettingsCreateWithoutFaviconInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  role: String!
  serviceLogo: AssetCreateOneWithoutServiceLogoTfpSettingsInput
  status: Status
}

input TfpSettingsCreateWithoutServiceLogoInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  favicon: AssetCreateOneWithoutFaviconTfpSettingsInput
  role: String!
  status: Status
}

input TfpSettingsScalarWhereInput {
  "Logical AND on all given filters."
  AND: [TfpSettingsScalarWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [TfpSettingsScalarWhereInput!]
  "Logical OR on all given filters."
  OR: [TfpSettingsScalarWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  role: String
  "All values containing the given string."
  role_contains: String
  "All values ending with the given string."
  role_ends_with: String
  "All values greater than the given value."
  role_gt: String
  "All values greater than or equal the given value."
  role_gte: String
  "All values that are contained in given list."
  role_in: [String!]
  "All values less than the given value."
  role_lt: String
  "All values less than or equal the given value."
  role_lte: String
  "All values that are not equal to given value."
  role_not: String
  "All values not containing the given string."
  role_not_contains: String
  "All values not ending with the given string."
  role_not_ends_with: String
  "All values that are not contained in given list."
  role_not_in: [String!]
  "All values not starting with the given string."
  role_not_starts_with: String
  "All values starting with the given string."
  role_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input TfpSettingsSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [TfpSettingsSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [TfpSettingsSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [TfpSettingsSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: TfpSettingsWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input TfpSettingsUpdateInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  favicon: AssetUpdateOneWithoutFaviconTfpSettingsInput
  role: String
  serviceLogo: AssetUpdateOneWithoutServiceLogoTfpSettingsInput
  status: Status
}

input TfpSettingsUpdateManyDataInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  role: String
  status: Status
}

input TfpSettingsUpdateManyMutationInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  role: String
  status: Status
}

input TfpSettingsUpdateManyWithWhereNestedInput {
  data: TfpSettingsUpdateManyDataInput!
  where: TfpSettingsScalarWhereInput!
}

input TfpSettingsUpdateManyWithoutFaviconInput {
  connect: [TfpSettingsWhereUniqueInput!]
  create: [TfpSettingsCreateWithoutFaviconInput!]
  delete: [TfpSettingsWhereUniqueInput!]
  deleteMany: [TfpSettingsScalarWhereInput!]
  disconnect: [TfpSettingsWhereUniqueInput!]
  set: [TfpSettingsWhereUniqueInput!]
  update: [TfpSettingsUpdateWithWhereUniqueWithoutFaviconInput!]
  updateMany: [TfpSettingsUpdateManyWithWhereNestedInput!]
  upsert: [TfpSettingsUpsertWithWhereUniqueWithoutFaviconInput!]
}

input TfpSettingsUpdateManyWithoutServiceLogoInput {
  connect: [TfpSettingsWhereUniqueInput!]
  create: [TfpSettingsCreateWithoutServiceLogoInput!]
  delete: [TfpSettingsWhereUniqueInput!]
  deleteMany: [TfpSettingsScalarWhereInput!]
  disconnect: [TfpSettingsWhereUniqueInput!]
  set: [TfpSettingsWhereUniqueInput!]
  update: [TfpSettingsUpdateWithWhereUniqueWithoutServiceLogoInput!]
  updateMany: [TfpSettingsUpdateManyWithWhereNestedInput!]
  upsert: [TfpSettingsUpsertWithWhereUniqueWithoutServiceLogoInput!]
}

input TfpSettingsUpdateWithWhereUniqueWithoutFaviconInput {
  data: TfpSettingsUpdateWithoutFaviconDataInput!
  where: TfpSettingsWhereUniqueInput!
}

input TfpSettingsUpdateWithWhereUniqueWithoutServiceLogoInput {
  data: TfpSettingsUpdateWithoutServiceLogoDataInput!
  where: TfpSettingsWhereUniqueInput!
}

input TfpSettingsUpdateWithoutFaviconDataInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  role: String
  serviceLogo: AssetUpdateOneWithoutServiceLogoTfpSettingsInput
  status: Status
}

input TfpSettingsUpdateWithoutServiceLogoDataInput {
  cguEN: RichTextAST
  cguFR: RichTextAST
  favicon: AssetUpdateOneWithoutFaviconTfpSettingsInput
  role: String
  status: Status
}

input TfpSettingsUpsertWithWhereUniqueWithoutFaviconInput {
  create: TfpSettingsCreateWithoutFaviconInput!
  update: TfpSettingsUpdateWithoutFaviconDataInput!
  where: TfpSettingsWhereUniqueInput!
}

input TfpSettingsUpsertWithWhereUniqueWithoutServiceLogoInput {
  create: TfpSettingsCreateWithoutServiceLogoInput!
  update: TfpSettingsUpdateWithoutServiceLogoDataInput!
  where: TfpSettingsWhereUniqueInput!
}

input TfpSettingsWhereInput {
  "Logical AND on all given filters."
  AND: [TfpSettingsWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [TfpSettingsWhereInput!]
  "Logical OR on all given filters."
  OR: [TfpSettingsWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  favicon: AssetWhereInput
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  role: String
  "All values containing the given string."
  role_contains: String
  "All values ending with the given string."
  role_ends_with: String
  "All values greater than the given value."
  role_gt: String
  "All values greater than or equal the given value."
  role_gte: String
  "All values that are contained in given list."
  role_in: [String!]
  "All values less than the given value."
  role_lt: String
  "All values less than or equal the given value."
  role_lte: String
  "All values that are not equal to given value."
  role_not: String
  "All values not containing the given string."
  role_not_contains: String
  "All values not ending with the given string."
  role_not_ends_with: String
  "All values that are not contained in given list."
  role_not_in: [String!]
  "All values not starting with the given string."
  role_not_starts_with: String
  "All values starting with the given string."
  role_starts_with: String
  serviceLogo: AssetWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input TfpSettingsWhereUniqueInput {
  id: ID
  role: String
}

input ThemeCreateInput {
  font: String
  institution: InstitutionCreateOneWithoutThemeInput
  organisation: OrganisationCreateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String!
  secondaryColor: String
  status: Status
}

input ThemeCreateOneWithoutInstitutionInput {
  connect: ThemeWhereUniqueInput
  create: ThemeCreateWithoutInstitutionInput
}

input ThemeCreateOneWithoutOrganisationInput {
  connect: ThemeWhereUniqueInput
  create: ThemeCreateWithoutOrganisationInput
}

input ThemeCreateWithoutInstitutionInput {
  font: String
  organisation: OrganisationCreateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String!
  secondaryColor: String
  status: Status
}

input ThemeCreateWithoutOrganisationInput {
  font: String
  institution: InstitutionCreateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String!
  secondaryColor: String
  status: Status
}

input ThemeSubscriptionWhereInput {
  "Logical AND on all given filters."
  AND: [ThemeSubscriptionWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [ThemeSubscriptionWhereInput!]
  "Logical OR on all given filters."
  OR: [ThemeSubscriptionWhereInput!]
  "The subscription event gets dispatched when it's listed in mutation_in"
  mutation_in: [MutationType!]
  node: ThemeWhereInput
  "The subscription event gets only dispatched when one of the updated fields names is included in this list"
  updatedFields_contains: String
  "The subscription event gets only dispatched when all of the field names included in this list have been updated"
  updatedFields_contains_every: [String!]
  "The subscription event gets only dispatched when some of the field names included in this list have been updated"
  updatedFields_contains_some: [String!]
}

input ThemeUpdateInput {
  font: String
  institution: InstitutionUpdateOneWithoutThemeInput
  organisation: OrganisationUpdateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String
  secondaryColor: String
  status: Status
}

input ThemeUpdateManyMutationInput {
  font: String
  primaryAltColor: String
  primaryColor: String
  secondaryColor: String
  status: Status
}

input ThemeUpdateOneWithoutInstitutionInput {
  connect: ThemeWhereUniqueInput
  create: ThemeCreateWithoutInstitutionInput
  delete: Boolean
  disconnect: Boolean
  update: ThemeUpdateWithoutInstitutionDataInput
  upsert: ThemeUpsertWithoutInstitutionInput
}

input ThemeUpdateOneWithoutOrganisationInput {
  connect: ThemeWhereUniqueInput
  create: ThemeCreateWithoutOrganisationInput
  delete: Boolean
  disconnect: Boolean
  update: ThemeUpdateWithoutOrganisationDataInput
  upsert: ThemeUpsertWithoutOrganisationInput
}

input ThemeUpdateWithoutInstitutionDataInput {
  font: String
  organisation: OrganisationUpdateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String
  secondaryColor: String
  status: Status
}

input ThemeUpdateWithoutOrganisationDataInput {
  font: String
  institution: InstitutionUpdateOneWithoutThemeInput
  primaryAltColor: String
  primaryColor: String
  secondaryColor: String
  status: Status
}

input ThemeUpsertWithoutInstitutionInput {
  create: ThemeCreateWithoutInstitutionInput!
  update: ThemeUpdateWithoutInstitutionDataInput!
}

input ThemeUpsertWithoutOrganisationInput {
  create: ThemeCreateWithoutOrganisationInput!
  update: ThemeUpdateWithoutOrganisationDataInput!
}

input ThemeWhereInput {
  "Logical AND on all given filters."
  AND: [ThemeWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [ThemeWhereInput!]
  "Logical OR on all given filters."
  OR: [ThemeWhereInput!]
  createdAt: DateTime
  "All values greater than the given value."
  createdAt_gt: DateTime
  "All values greater than or equal the given value."
  createdAt_gte: DateTime
  "All values that are contained in given list."
  createdAt_in: [DateTime!]
  "All values less than the given value."
  createdAt_lt: DateTime
  "All values less than or equal the given value."
  createdAt_lte: DateTime
  "All values that are not equal to given value."
  createdAt_not: DateTime
  "All values that are not contained in given list."
  createdAt_not_in: [DateTime!]
  font: String
  "All values containing the given string."
  font_contains: String
  "All values ending with the given string."
  font_ends_with: String
  "All values greater than the given value."
  font_gt: String
  "All values greater than or equal the given value."
  font_gte: String
  "All values that are contained in given list."
  font_in: [String!]
  "All values less than the given value."
  font_lt: String
  "All values less than or equal the given value."
  font_lte: String
  "All values that are not equal to given value."
  font_not: String
  "All values not containing the given string."
  font_not_contains: String
  "All values not ending with the given string."
  font_not_ends_with: String
  "All values that are not contained in given list."
  font_not_in: [String!]
  "All values not starting with the given string."
  font_not_starts_with: String
  "All values starting with the given string."
  font_starts_with: String
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  institution: InstitutionWhereInput
  organisation: OrganisationWhereInput
  primaryAltColor: String
  "All values containing the given string."
  primaryAltColor_contains: String
  "All values ending with the given string."
  primaryAltColor_ends_with: String
  "All values greater than the given value."
  primaryAltColor_gt: String
  "All values greater than or equal the given value."
  primaryAltColor_gte: String
  "All values that are contained in given list."
  primaryAltColor_in: [String!]
  "All values less than the given value."
  primaryAltColor_lt: String
  "All values less than or equal the given value."
  primaryAltColor_lte: String
  "All values that are not equal to given value."
  primaryAltColor_not: String
  "All values not containing the given string."
  primaryAltColor_not_contains: String
  "All values not ending with the given string."
  primaryAltColor_not_ends_with: String
  "All values that are not contained in given list."
  primaryAltColor_not_in: [String!]
  "All values not starting with the given string."
  primaryAltColor_not_starts_with: String
  "All values starting with the given string."
  primaryAltColor_starts_with: String
  primaryColor: String
  "All values containing the given string."
  primaryColor_contains: String
  "All values ending with the given string."
  primaryColor_ends_with: String
  "All values greater than the given value."
  primaryColor_gt: String
  "All values greater than or equal the given value."
  primaryColor_gte: String
  "All values that are contained in given list."
  primaryColor_in: [String!]
  "All values less than the given value."
  primaryColor_lt: String
  "All values less than or equal the given value."
  primaryColor_lte: String
  "All values that are not equal to given value."
  primaryColor_not: String
  "All values not containing the given string."
  primaryColor_not_contains: String
  "All values not ending with the given string."
  primaryColor_not_ends_with: String
  "All values that are not contained in given list."
  primaryColor_not_in: [String!]
  "All values not starting with the given string."
  primaryColor_not_starts_with: String
  "All values starting with the given string."
  primaryColor_starts_with: String
  secondaryColor: String
  "All values containing the given string."
  secondaryColor_contains: String
  "All values ending with the given string."
  secondaryColor_ends_with: String
  "All values greater than the given value."
  secondaryColor_gt: String
  "All values greater than or equal the given value."
  secondaryColor_gte: String
  "All values that are contained in given list."
  secondaryColor_in: [String!]
  "All values less than the given value."
  secondaryColor_lt: String
  "All values less than or equal the given value."
  secondaryColor_lte: String
  "All values that are not equal to given value."
  secondaryColor_not: String
  "All values not containing the given string."
  secondaryColor_not_contains: String
  "All values not ending with the given string."
  secondaryColor_not_ends_with: String
  "All values that are not contained in given list."
  secondaryColor_not_in: [String!]
  "All values not starting with the given string."
  secondaryColor_not_starts_with: String
  "All values starting with the given string."
  secondaryColor_starts_with: String
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
  updatedAt: DateTime
  "All values greater than the given value."
  updatedAt_gt: DateTime
  "All values greater than or equal the given value."
  updatedAt_gte: DateTime
  "All values that are contained in given list."
  updatedAt_in: [DateTime!]
  "All values less than the given value."
  updatedAt_lt: DateTime
  "All values less than or equal the given value."
  updatedAt_lte: DateTime
  "All values that are not equal to given value."
  updatedAt_not: DateTime
  "All values that are not contained in given list."
  updatedAt_not_in: [DateTime!]
}

input ThemeWhereUniqueInput {
  id: ID
}


scalar DateTime

"Raw JSON value"
scalar Json

"Custom scalar representing a Slate rich text AST"
scalar RichTextAST

"The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1."
scalar Long
